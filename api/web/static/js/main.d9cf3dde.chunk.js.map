{"version":3,"sources":["../node_modules/suneditor/src/lang sync /^/.//.*/.js$","data/external-tools.js","components/icons/CreateNarrativeContextIcon.jsx","components/icons/ImportNarrativeContextIcon.jsx","utils/id-generator.js","utils/array-utils.js","models/base-element.js","models/paragraph-element.js","models/container-element.js","models/shop-item.js","models/shop-element.js","utils/elements-factory.js","models/narrative-category.js","models/narrative-context.js","utils/narrative-context-importer.js","components/Home.jsx","components/CreateNarrativeContext.jsx","components/icons/CreateIcon.jsx","components/icons/ScrollIcon.jsx","components/icons/FolderIcon.jsx","components/icons/ShopIcon.jsx","components/CreateElementButton.jsx","components/icons/RenameIcon.jsx","components/icons/MoveUpIcon.jsx","components/icons/MoveDownIcon.jsx","components/icons/DeleteIcon.jsx","components/icons/CollapseIcon.jsx","components/icons/ExpandIcon.jsx","components/ElementListItem.jsx","components/NarrativeCategoryComponent.jsx","components/icons/ExportNarrativeContextIcon.jsx","components/ViewNarrativeContext.jsx","components/RichTextEditor.jsx","config.js","repositories/web-api-repository.js","repositories/dnd5e-characters-repository.js","components/CharacterStatBlock.jsx","components/ParagraphElementComponentBodyRenderer.jsx","components/ParagraphElementComponent.jsx","components/ShopTableEditor.jsx","components/ShopElementComponent.jsx","components/icons/EditIcon.jsx","components/icons/CopyLinkIcon.jsx","components/ViewElement.jsx","repositories/auth-repository.js","components/icons/UserIcon.jsx","components/icons/LogoutIcon.jsx","components/SessionMenuButton.jsx","components/Navbar.jsx","components/LoginView.jsx","components/LogoutView.jsx","components/UpdatingDBIndicator.jsx","App.jsx","models/database.js","repositories/db-sync-repository.js","repositories/db-repository.js","app-context.js","services/data-corruption-preventer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EXTERNAL_TOOLS","name","url","CreateNarrativeContextIcon","icon","faBook","color","ImportNarrativeContextIcon","faFileImport","IdGenerator","uuidv4","ArrayUtils","arr","old_index","new_index","length","k","push","undefined","splice","BaseElement","type","this","generateId","data","TYPES","PARAGRAPH","CONTAINER","SHOP","ParagraphElement","body","json","ContainerElement","elements","elementId","find","x","element","getElement","indexOf","oldIndex","newIndex","moveElementInArray","findInChild","found","plainElements","concat","getPlainViewableElements","toJson","ElementsFactory","mapElementFromJson","ShopItem","title","price","link","amount","fromJson","instance","ShopElement","items","_ELEMENT_TYPES_MAPPING","NarrativeCategory","viewableElements","_getPlainViewableElements","index","NarrativeContext","categories","categoryId","category","getNarrativeCategory","NarrativeContextImporter","narrativeContextJson","appContext","narrativeContext","JSON","parse","alert","getDB","getNarrativeContext","addNarrativeContext","saveDB","Home","navigate","useNavigate","useState","campaigns","setCampaigns","worlds","setWorlds","useEffect","setNarrativeContextById","setBackButtonUrl","setForwardButtonUrl","db","importNarrativeContext","a","preventDefault","reader","FileReader","onload","target","result","importFromJson","setTimeout","document","getElementById","value","readAsText","files","className","onClick","hidden","onChange","accept","click","role","aria-label","key","to","href","CreateNarrativeContext","setName","setType","placeholder","event","CreateIcon","faPlus","ScrollIcon","faScroll","FolderIcon","faFolderOpen","ShopIcon","faShoppingCart","CreateElementButton","dropdownBody","useRef","onDropdownElementClick","current","classList","toggle","ref","RenameIcon","faTag","MoveUpIcon","faLevelUpAlt","MoveDownIcon","faLevelDownAlt","DeleteIcon","faTrashAlt","CollapseIcon","faAngleDown","ExpandIcon","faChevronRight","ElementListItem","narrativeContextId","narrativeCategoryId","onMoveElementUp","onMoveElementDown","onDeleteElement","onRenameElement","onChildUpdate","tabElement","highlight","setHighlight","elementListItemExpandedStatuses","expanded","setExpanded","isContainer","deleteChildElement","childElement","window","confirm","removeElement","moveChildElementUp","moveElementUp","moveChildElementDown","moveElementDown","renameChildElement","prompt","onMouseEnter","onMouseLeave","icons","getIcon","newElement","createElement","addElement","NarrativeCategoryComponent","narrativeCategory","onCategoryChange","moveCategoryUp","moveCategoryDown","elementsState","setElementsState","rerender","deleteElement","renameElement","removeNarrativeCategory","ExportNarrativeContextIcon","faFileDownload","ViewNarrativeContext","useParams","setNarrativeContext","narrativeContextCategories","setNarrativeContextCategories","obtainedNarrativeContext","moveNarrativeCategoryUp","moveNarrativeCategoryDown","categoryName","addNarrativeCategory","narrativeContextDownloadLink","content","stringify","file","Blob","URL","createObjectURL","download","removeNarrativeContext","RichTextEditor","initialValue","editor","currentChangeId","handleInput","changeId","getContents","lang","defaultValue","height","innerHeight","documentElement","clientHeight","getEditorHeight","state","onInput","getSunEditorInstance","sunEditor","setOptions","buttonList","formats","tag","WEB_API_URL","location","origin","WebApiRepository","localStorage","getItem","endpoint","headers","authToken","_get_token","fetch","method","response","ok","stringBody","Pako","gzip","DnD5eCharactersRepository","characterId","_get","CharacterStatBlock","character","character_id","class","race","alignment","armor_class","max_hp","speed","proficiency_bonus","ability_scores","ability_score","toUpperCase","substring","modifier","saving_throws","filter","saving_throw","has_proficiency","join","skills","skill","passive_perception","get_senses","languages","spellcasting","spellcasting_ability","saving_throws_cd","attack_bonus","spell_levels","parseInt","spell_level","max_spell_slots","spells","ParagraphElementComponentBodyRenderer","renderedBody","setRenderedBody","htmlBody","renderBody","getCharacter","repo","getRepository","innerHTML","ReactDOMServer","renderToString","replaceCharacters","html","matches","matchAll","replaced_body","match","replace","dangerouslySetInnerHTML","__html","ParagraphElementComponent","parentExposedFuntions","editMode","setEditMode","currentEditorValue","hasChangedAtLeastOneTime","discardChanges","edit","saveDBAsync","ShopTableEditor","onItemsChange","clone","itemsList","setItemsList","updateItemProp","item","prop","addItem","ShopElementComponent","currentEditorItems","childFunctions","EditIcon","faEdit","CopyLinkIcon","faLink","ViewElement","setElement","childFuntions","obtainedElement","findElementAnywhere","prevElement","getPrevElement","nextElement","getNextElement","setNavigationButtons","relLink","navigator","clipboard","writeText","onDelete","AuthRepository","onLogin","onLogout","credentials","_post","setItem","token","username","removeItem","UserIcon","faUser","LogoutIcon","faSignOutAlt","SessionMenuButton","logout","Navbar","backButtonUrl","forwardButtonUrl","faDiceD20","faAngleLeft","faAngleRight","isAuthenticated","LoginView","setUsername","password","setPassword","login","onSubmit","LogoutView","UpdatingDBIndicator","faCloudUploadAlt","App","authRepo","userLogged","updatingDB","setUpdatingDB","setUpdatingDBIndicator","path","Database","addWorld","addCampaign","narrativeContextsList","world","campaign","DBSyncRepository","dbJson","DBRepository","_db","_tryDownloadCloudDB","hook","_onCloudDBDownloadedHooks","_afterSaveHooks","callback","_onDirtyDBCallback","_preventSave","_save","console","log","_dbSyncRepository","pullDB","downloadedDB","pushDB","_callAfterSaveHooks","_DB_KEY","AppContext","_repositories","status","repositoryClass","DataCorruptionPreventer","_appContext","_interval","_INTERVAL_TIME","_lastDBSaveTime","_LAST_SAVE_DATE_KEY","_getStoredDate","_registerAfterSaveHook","_registerOnDirtyDBCallback","registerAfterSaveHook","_updateLastSaveInfo","registerOnDirtyDBCallback","_onDirtyDB","saveDate","Date","toString","lastSaveDateStr","storedDate","setInterval","_isWorkingDirty","enableSavingPrevention","clearInterval","reload","dataCorruptionPreventer","dbRepo","start","tryGetCloudDB","ReactDom","render"],"mappings":"sVAAA,IAAIA,EAAM,CACT,WAAY,GACZ,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,aAAc,GACd,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,aAAc,GACd,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,aAAc,IAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,0SCzCPY,G,MAAiB,CAC1B,CACIC,KAAM,WACNC,IAAK,qBAET,CACID,KAAM,uBACNC,IAAK,kCAET,CACID,KAAM,2CACNC,IAAK,+BAET,CACID,KAAM,4BACNC,IAAK,wDAET,CACID,KAAM,4CACNC,IAAK,sCAET,CACID,KAAM,uBACNC,IAAK,mCAET,CACID,KAAM,QACNC,IAAK,mCAET,CACID,KAAM,SACNC,IAAK,uC,cC3BN,SAASC,IACZ,OAAO,kBAAC,IAAD,CAAiBC,KAAMC,IAAQC,MAAO,YCD1C,SAASC,IACZ,OAAO,kBAAC,IAAD,CAAiBH,KAAMI,IAAcF,MAAO,Y,0BCH1CG,EAAb,+FACI,WACI,OAAOC,kBAFf,K,QCFaC,EAAb,uGACI,SAA0BC,EAAKC,EAAWC,GACtC,GAAIA,GAAaF,EAAIG,OAEjB,IADA,IAAIC,EAAIF,EAAYF,EAAIG,OAAS,EAC1BC,KACHJ,EAAIK,UAAKC,GAGjBN,EAAIO,OAAOL,EAAW,EAAGF,EAAIO,OAAON,EAAW,GAAG,QAR1D,K,gCCEaO,EAAb,WAYI,WAAYnB,EAAMoB,GAAO,yBAVzBjC,GAAK,KAUmB,KATxBa,KAAO,KASiB,KARxBoB,KAAO,KASHC,KAAKlC,GAAKqB,EAAYc,aACtBD,KAAKrB,KAAOA,EACZqB,KAAKD,KAAOA,EAfpB,0CAkBI,WACI,MAAO,CACHjC,GAAIkC,KAAKlC,GACTa,KAAMqB,KAAKrB,KACXoB,KAAMC,KAAKD,SAtBvB,uBA0BI,SAAgBG,GACZ,MAAM/B,MAAM,uCA3BpB,KAAa2B,EAMFK,MAAQ,CACXC,UAAW,YACXC,UAAW,YACXC,KAAM,QCTP,IAAMC,EAAb,kDAGI,WAAY5B,GAAoB,IAAD,EAAb6B,EAAa,uDAAN,KAAM,4BAC3B,cAAM7B,EAAMmB,EAAYK,MAAMC,YAHlCI,KAAO,KAIH,EAAKA,KAAOA,EAFe,EAHnC,0CAQI,WACI,IAAMC,EAAI,+DAEV,OADAA,EAAI,KAAWT,KAAKQ,KACbC,KAXf,uBAcI,SAAgBP,GAKZ,OAJiB,IAAIK,EACjBL,EAAI,KACJA,EAAI,UAjBhB,GAAsCJ,GCEzBY,EAAb,kDAGI,WAAY/B,GAAsB,IAAD,EAAfgC,EAAe,uDAAJ,GAAI,4BAC7B,cAAMhC,EAAMmB,EAAYK,MAAME,YAHlCM,SAAW,KAIP,EAAKA,SAAWA,EAFa,EAHrC,8CAQI,SAAWC,GACP,OAAOZ,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,OAThD,wBAYI,SAAWG,GACPf,KAAKW,SAAShB,KAAKoB,KAb3B,2BAgBI,SAAcH,GACV,IAAMG,EAAUf,KAAKgB,WAAWJ,GAChCZ,KAAKW,SAASd,OAAOG,KAAKW,SAASM,QAAQF,GAAU,KAlB7D,2BAqBI,SAAcH,GACV,IAAMM,EAAWlB,KAAKW,SAASM,QAAQjB,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAClEO,EAAWD,EAAW,EACX,IAAbA,GACJ7B,EAAW+B,mBAAmBpB,KAAKW,SAAUO,EAAUC,KAzB/D,6BA4BI,SAAgBP,GACZ,IAAMM,EAAWlB,KAAKW,SAASM,QAAQjB,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAClEO,EAAWD,EAAW,EACxBC,IAAanB,KAAKW,SAASlB,QAC/BJ,EAAW+B,mBAAmBpB,KAAKW,SAAUO,EAAUC,KAhC/D,yBAmCI,SAAYP,GAAY,IAAD,gBACGZ,KAAKW,UADR,IACnB,2BAAqC,CAAC,IAA3BI,EAA0B,QACjC,GAAIA,EAAQjD,KAAO8C,EAAW,OAAOG,EACrC,GAAIA,EAAQM,YAAa,CACrB,IAAMC,EAAQP,EAAQM,YAAYT,GAClC,GAAIU,EAAO,OAAOA,IALP,8BAQnB,OAAO,OA3Cf,sCA+CI,WACI,IADuB,EACnBC,EAAgB,GADG,cAEDvB,KAAKW,UAFJ,IAEvB,2BAAqC,CAAC,IAA3BI,EAA0B,QAC7BA,EAAQhB,OAASD,EAAYK,MAAME,UACnCkB,EAAgBA,EAAcC,OAAOT,EAAQU,4BAE7CF,EAAc5B,KAAKoB,IANJ,8BASvB,OAAOQ,IAxDf,oBA2DI,WACI,IAAMd,EAAI,+DAEV,OADAA,EAAI,SAAeT,KAAKW,SAAShD,KAAI,SAAAmD,GAAC,OAAIA,EAAEY,YACrCjB,KA9Df,uBAiEI,SAAgBP,GAKZ,OAJiB,IAAIQ,EACjBR,EAAI,MACHA,EAAI,UAAgB,IAAIvC,KAAI,SAAAmD,GAAC,OAAIa,EAAgBC,mBAAmBd,WApEjF,GAAsChB,GCFzB+B,EAAb,WAQI,WAAYC,EAAOC,EAAOC,GAAmB,IAAbC,EAAY,uDAAH,EAAG,yBAN5CnE,GAAK,KAMuC,KAL5CgE,MAAQ,KAKoC,KAJ5CC,MAAQ,KAIoC,KAH5CC,KAAO,KAGqC,KAF5CC,OAAS,EAGLjC,KAAKlC,GAAKqB,EAAYc,aACtBD,KAAK8B,MAAQA,EACb9B,KAAK+B,MAAQA,EACb/B,KAAKgC,KAAOA,EACZhC,KAAKiC,OAASA,EAbtB,yCAgBI,WACI,OAAOJ,EAASK,SAASlC,KAAK0B,YAjBtC,oBAoBI,WACI,MAAO,CACH5D,GAAIkC,KAAKlC,GACTgE,MAAO9B,KAAK8B,MACZC,MAAO/B,KAAK+B,MACZC,KAAMhC,KAAKgC,KACXC,OAAQjC,KAAKiC,WA1BzB,uBA8BI,SAAgB/B,GACZ,IAAMiC,EAAW,IAAIN,EACjB3B,EAAI,MACJA,EAAI,MACJA,EAAI,KACJA,EAAI,QAGR,OADAiC,EAASrE,GAAKoC,EAAI,GACXiC,MAtCf,KCCaC,EAAb,kDAGI,WAAYzD,GAAmB,IAAD,EAAZ0D,EAAY,uDAAJ,GAAI,4BAC1B,cAAM1D,EAAMmB,EAAYK,MAAMG,OAHlC+B,MAAQ,KAIJ,EAAKA,MAAQA,EAFa,EAHlC,0CAQI,WACI,IAAM5B,EAAI,+DAEV,OADAA,EAAI,MAAYT,KAAKqC,MAAM1E,KAAI,SAAAmD,GAAC,OAAIA,EAAEY,YAC/BjB,KAXf,uBAcI,SAAgBP,GAKZ,OAJiB,IAAIkC,EACjBlC,EAAI,KACJA,EAAI,MAAUvC,KAAI,SAAAmD,GAAC,OAAIe,EAASK,SAASpB,WAjBrD,GAAiChB,GCCpB6B,EAAb,uGAOI,SAA0BzB,GACtB,IAAMiC,EAAWnC,KAAKsC,uBAAuBpC,EAAI,MAAUgC,SAAShC,GAEpE,OADAiC,EAASrE,GAAKoC,EAAI,GACXiC,IAVf,2BAaI,SAAqBxD,EAAMoB,GACvB,OAAO,IAAIC,KAAKsC,uBAAuBvC,GAAMpB,OAdrD,KAAagD,EACFW,uBAAyB,CAC5B,UAAa/B,EACb,UAAaG,EACb,KAAQ0B,GCHT,IAAMG,EAAb,WAKI,WAAY5D,GAAO,yBAJnBb,GAAK,KAIa,KAHlBiC,KAAO,KAGW,KAFlBY,SAAW,KAGPX,KAAKlC,GAAKqB,EAAYc,aACtBD,KAAKrB,KAAOA,EACZqB,KAAKW,SAAW,GARxB,8CAWI,SAAWC,GACP,OAAOZ,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,OAZhD,iCAeI,SAAoBA,GAAY,IAAD,gBACLZ,KAAKW,UADA,IAC3B,2BAAqC,CAAC,IAA3BI,EAA0B,QACjC,GAAIA,EAAQjD,KAAO8C,EAAW,OAAOG,EACrC,GAAIA,EAAQM,YAAa,CACrB,IAAMC,EAAQP,EAAQM,YAAYT,GAClC,GAAIU,EAAO,OAAOA,IALC,8BAQ3B,OAAO,OAvBf,wBA0BI,SAAWP,GACPf,KAAKW,SAAShB,KAAKoB,KA3B3B,2BA8BI,SAAcH,GACV,IAAMG,EAAUf,KAAKgB,WAAWJ,GAChCZ,KAAKW,SAASd,OAAOG,KAAKW,SAASM,QAAQF,GAAU,KAhC7D,2BAmCI,SAAcH,GACV,IAAMM,EAAWlB,KAAKW,SAASM,QAAQjB,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAClEO,EAAWD,EAAW,EACX,IAAbA,GACJ7B,EAAW+B,mBAAmBpB,KAAKW,SAAUO,EAAUC,KAvC/D,6BA0CI,SAAgBP,GACZ,IAAMM,EAAWlB,KAAKW,SAASM,QAAQjB,KAAKW,SAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAClEO,EAAWD,EAAW,EACxBC,IAAanB,KAAKW,SAASlB,QAC/BJ,EAAW+B,mBAAmBpB,KAAKW,SAAUO,EAAUC,KA9C/D,uCAkDI,WACI,IADwB,EACpBI,EAAgB,GADI,cAEFvB,KAAKW,UAFH,IAExB,2BAAqC,CAAC,IAA3BI,EAA0B,QAC7BA,EAAQhB,OAASD,EAAYK,MAAME,UACnCkB,EAAgBA,EAAcC,OAAOT,EAAQU,4BAE7CF,EAAc5B,KAAKoB,IANH,8BASxB,OAAOQ,IA3Df,4BA8DI,SAAeX,GACX,IAAM4B,EAAmBxC,KAAKyC,4BACxBC,EAAQF,EAAiBvB,QAAQuB,EAAiB3B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAC3E,OAAc,IAAV8B,EAAoB,KACjBF,EAAiBE,EAAQ,KAlExC,4BAqEI,SAAe9B,GACX,IAAM4B,EAAmBxC,KAAKyC,4BACxBC,EAAQF,EAAiBvB,QAAQuB,EAAiB3B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO8C,MAC3E,OAAI8B,IAAWF,EAAiB/C,OAAS,EAAW,KAC7C+C,EAAiBE,EAAQ,KAzExC,oBA4EI,WACI,MAAO,CACH5E,GAAIkC,KAAKlC,GACTa,KAAMqB,KAAKrB,KACXgC,SAAUX,KAAKW,SAAShD,KAAI,SAAAoD,GAAO,OAAIA,EAAQW,gBAhF3D,uBAoFI,SAAgBxB,GACZ,IAAMiC,EAAW,IAAII,EACjBrC,EAAI,MAIR,OAFAiC,EAASrE,GAAKoC,EAAI,GAClBiC,EAASxB,SAAWT,EAAI,SAAavC,KAAI,SAAAmD,GAAC,OAAIa,EAAgBC,mBAAmBd,MAC1EqB,MA1Ff,KCDaQ,EAAb,WAYI,WAAY5C,EAAMpB,GACd,GADqB,yBALzBb,GAAK,KAKmB,KAJxBiC,KAAO,KAIiB,KAHxBpB,KAAO,KAGiB,KAFxBiE,WAAa,MAGJD,EAAiBxC,MAAMU,MAAK,SAAAC,GAAC,OAAIA,EAAEf,OAASA,KAAO,MAAM5B,MAAM,gBACpE6B,KAAKlC,GAAKqB,EAAYc,aACtBD,KAAKD,KAAOA,EACZC,KAAKrB,KAAOA,EACZqB,KAAK4C,WAAa,GAjB1B,wDAoBI,SAAqBC,GACjB,OAAO7C,KAAK4C,WAAW/B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO+E,OArBlD,kCAwBI,SAAqBC,GACjB9C,KAAK4C,WAAWjD,KAAKmD,KAzB7B,qCA4BI,SAAwBD,GACpB,IAAMC,EAAW9C,KAAK+C,qBAAqBF,GAC3C7C,KAAK4C,WAAW/C,OAAOG,KAAK4C,WAAW3B,QAAQ6B,GAAW,KA9BlE,qCAiCI,SAAwBD,GACpB,IAAM3B,EAAWlB,KAAK4C,WAAW3B,QAAQjB,KAAK4C,WAAW/B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO+E,MACtE1B,EAAWD,EAAW,EACX,IAAbA,GACJ7B,EAAW+B,mBAAmBpB,KAAK4C,WAAY1B,EAAUC,KArCjE,uCAwCI,SAA0B0B,GACtB,IAAM3B,EAAWlB,KAAK4C,WAAW3B,QAAQjB,KAAK4C,WAAW/B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO+E,MACtE1B,EAAWD,EAAW,EACxBC,IAAanB,KAAK4C,WAAWnD,QACjCJ,EAAW+B,mBAAmBpB,KAAK4C,WAAY1B,EAAUC,KA5CjE,oBA+CI,WACI,MAAO,CACHrD,GAAIkC,KAAKlC,GACTiC,KAAMC,KAAKD,KACXpB,KAAMqB,KAAKrB,KACXiE,WAAY5C,KAAK4C,WAAWjF,KAAI,SAAAmD,GAAC,OAAIA,EAAEY,gBApDnD,uBAwDI,SAAgBxB,GACZ,IAAMiC,EAAW,IAAIQ,EACjBzC,EAAI,KACJA,EAAI,MAIR,OAFAiC,EAASrE,GAAKoC,EAAI,GAClBiC,EAASS,WAAa1C,EAAI,WAAevC,KAAI,SAAAmD,GAAC,OAAIyB,EAAkBL,SAASpB,MACtEqB,MA/Df,KAAaQ,EAEFxC,MAAQ,CACX,CAACJ,KAAM,QAASpB,KAAM,SACtB,CAACoB,KAAM,WAAYpB,KAAM,eCP1B,IAAMqE,EAAb,mGACI,SAAsBC,EAAsBC,GACxC,IAAIC,EAAmB,KACvB,IACIA,EAAmBR,EAAiBT,SAASkB,KAAKC,MAAMJ,IAC1D,SAEE,YADAK,MAAM,2GAI4BJ,EAAWK,QAAQC,oBAAoBL,EAAiBrF,IAE1FwF,MAAM,sIAGVJ,EAAWK,QAAQE,oBAAoBN,GACvCG,MAAM,iDACNJ,EAAWQ,cAjBnB,KCOO,SAASC,EAAT,GAA+B,IAAfT,EAAc,EAAdA,WACbU,EAAWC,cAEjB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNjB,EAAWkB,wBAAwB,MACnClB,EAAWmB,iBAAiB,MAC5BnB,EAAWoB,oBAAoB,MAC/B,IAAMC,EAAKrB,EAAWK,QACtBS,EAAaO,EAAGR,WAChBG,EAAUK,EAAGN,UACd,CAACf,IAEJ,IAIMsB,EAAsB,uCAAG,WAAOtG,GAAP,eAAAuG,EAAA,sDAC3BvG,EAAEwG,kBACIC,EAAS,IAAIC,YACZC,OAAP,uCAAgB,WAAO3G,GAAP,iBAAAuG,EAAA,sDACNhE,EAAQvC,EAAE4G,OAAOC,OACvB/B,EAAyBgC,eAAevE,EAAMyC,GACxCqB,EAAKrB,EAAWK,QACtBS,EAAa,YAAIO,EAAGR,YACpBG,EAAU,YAAIK,EAAGN,SACjBgB,YAAW,WACPjB,EAAaO,EAAGR,WAChBG,EAAUK,EAAGN,UACd,GACHiB,SAASC,eAAe,gCAAgCC,MAAQ,KAVpD,2CAAhB,sDAYAT,EAAOU,WAAWnH,EAAE4G,OAAOQ,MAAM,IAfN,2CAAH,sDAkB5B,OAAO,6BACH,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,SAAd,wBACA,yBAAKA,UAAU,oBACX,4BAAQC,QA1BI,WACpB5B,EAAS,+BA0BG,kBAAC/E,EAAD,MADJ,UAGA,2BAAOkB,KAAK,OAAOjC,GAAG,+BAA+B2H,QAAQ,EACzDC,SAAUlB,EAAwBmB,OAAO,qBAC7C,4BAAQH,QAAS,kBAAMN,SAASC,eAAe,gCAAgCS,UAC3E,kBAAC3G,EAAD,MADJ,eAOR,4BAAI,0BAAM4G,KAAK,MAAMC,aAAW,SAA5B,gBAAJ,gBACA,4BACK/B,EAAUpG,KAAI,SAAAmD,GAAC,OAAI,wBAAIiF,IAAKjF,EAAEhD,IAC3B,kBAAC,IAAD,CAAMkI,GAAE,6BAAwBlF,EAAEhD,KAAOgD,EAAEnC,WAGnD,4BAAI,0BAAMkH,KAAK,MAAMC,aAAW,SAA5B,gBAAJ,WACA,4BACK7B,EAAOtG,KAAI,SAAAmD,GAAC,OAAI,wBAAIiF,IAAKjF,EAAEhD,IACxB,kBAAC,IAAD,CAAMkI,GAAE,6BAAwBlF,EAAEhD,KAAOgD,EAAEnC,WAGnD,4BAAI,0BAAMkH,KAAK,MAAMC,aAAW,SAA5B,gBAAJ,iBACA,4BACKpH,EAAef,KAAI,SAAAmD,GAAC,OAAI,wBAAIiF,IAAKjF,EAAEnC,MAChC,uBAAGsH,KAAMnF,EAAElC,KAAMkC,EAAEnC,YCxE5B,SAASuH,EAAT,GAAiD,IAAfhD,EAAc,EAAdA,WAC/BU,EAAWC,cAEjB,EAAwBC,qBAAxB,mBAAOnF,EAAP,KAAawH,EAAb,KACA,EAAwBrC,mBAASnB,EAAiBxC,MAAM,GAAGJ,MAA3D,mBAAOA,EAAP,KAAaqG,EAAb,KAEAjC,qBAAU,WACNjB,EAAWkB,wBAAwB,QACpC,CAAClB,IAUJ,OAAO,6BACH,wDACA,2BAAOnD,KAAK,OAAOsG,YAAY,SAASX,SAAU,SAACY,GAAD,OAAWH,EAAQG,EAAMxB,OAAOM,UAClF,4BAAQM,SAAU,SAACY,GAAD,OAAWF,EAAQE,EAAMxB,OAAOM,SAC7CzC,EAAiBxC,MAAMxC,KAAI,SAAAmD,GAAC,OAAI,4BAAQiF,IAAKjF,EAAEf,KAAMqF,MAAOtE,EAAEf,MAAOe,EAAEnC,UAE5E,4BAAQ6G,QAbG,WACX,IAAMrC,EAAmB,IAAIR,EAAiB5C,EAAMpB,GACpDuE,EAAWK,QAAQE,oBAAoBN,GACvCD,EAAWQ,SACXE,EAAS,OAST,U,8BCxBD,SAAS2C,IACZ,OAAO,kBAAC,IAAD,CAAiBzH,KAAM0H,IAAQxH,MAAO,YCD1C,SAASyH,IACZ,OAAO,kBAAC,IAAD,CAAiB3H,KAAM4H,IAAU1H,MAAO,YCD5C,SAAS2H,IACZ,OAAO,kBAAC,IAAD,CAAiB7H,KAAM8H,IAAc5H,MAAO,YCDhD,SAAS6H,IACZ,OAAO,kBAAC,IAAD,CAAiB/H,KAAMgI,IAAgB9H,MAAO,YCGlD,SAAS+H,EAAT,GAA2D,IAAD,IAA3BvB,eAA2B,MAAjB,SAACzF,KAAgB,EAEvDiH,EAAeC,mBAOfC,EAAyB,SAACnH,GAC5BiH,EAAaG,QAAQC,UAAUC,OAAO,oBACtC7B,EAAQzF,IAGZ,OAAO,yBAAKwF,UAAU,uBAClB,4BAAQC,QAVS,WACjBwB,EAAaG,QAAQC,UAAUC,OAAO,sBAUlC,kBAACd,EAAD,MACA,0BAAMhB,UAAU,WAAhB,mBAEJ,yBAAK+B,IAAKN,EAAczB,UAAU,gBAC9B,4BAAQC,QAAS,kBAAM0B,EAAuBpH,EAAYK,MAAMC,aAC5D,kBAACqG,EAAD,MADJ,UAGA,4BAAQjB,QAAS,kBAAM0B,EAAuBpH,EAAYK,MAAME,aAC5D,kBAACsG,EAAD,MADJ,eAGA,4BAAQnB,QAAS,kBAAM0B,EAAuBpH,EAAYK,MAAMG,QAC5D,kBAACuG,EAAD,MADJ,a,MC9BL,SAASU,IACZ,OAAO,kBAAC,IAAD,CAAiBzI,KAAM0I,IAAOxI,MAAO,YCDzC,SAASyI,IACZ,OAAO,kBAAC,IAAD,CAAiB3I,KAAM4I,IAAc1I,MAAO,YCDhD,SAAS2I,IACZ,OAAO,kBAAC,IAAD,CAAiB7I,KAAM8I,IAAgB5I,MAAO,YCDlD,SAAS6I,IACZ,OAAO,kBAAC,IAAD,CAAiB/I,KAAMgJ,IAAY9I,MAAO,YCD9C,SAAS+I,IACZ,OAAO,kBAAC,IAAD,CAAiBjJ,KAAMkJ,IAAahJ,MAAO,YCD/C,SAASiJ,IACZ,OAAO,kBAAC,IAAD,CAAiBnJ,KAAMoJ,IAAgBlJ,MAAO,YCWlD,SAASmJ,EAAT,GAG8C,IAHnBjF,EAGkB,EAHlBA,WAAYkF,EAGM,EAHNA,mBAAoBC,EAGd,EAHcA,oBAAqBtH,EAGnC,EAHmCA,QAGnC,IAFhDuH,uBAEgD,MAF9B,SAACvH,KAE6B,MAFZwH,yBAEY,MAFQ,SAACxH,KAET,MADhDyH,uBACgD,MAD9B,SAACzH,KAC6B,MADZ0H,uBACY,MADM,SAAC1H,KACP,MAAhD2H,qBAAgD,MAAhC,aAAgC,MAArBC,kBAAqB,SAEhD,EAAkC7E,oBAAS,GAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KACA,EAAgC/E,mBAASZ,EAAW4F,gCAAgC/H,EAAQjD,MAAO,GAAnG,mBAAOiL,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,WAChB,OAAOlI,EAAQhB,OAASD,EAAYK,MAAME,WAwBxC6I,EAAqB,SAACC,GACHC,OAAOC,QAAP,+CAAuDF,EAAaxK,SAEzFoC,EAAQuI,cAAcH,EAAarL,IACnCoF,EAAWQ,SACXgF,MAGEa,EAAqB,SAACJ,GACxBpI,EAAQyI,cAAcL,EAAarL,IACnCoF,EAAWQ,SACXgF,KAGEe,EAAuB,SAACN,GAC1BpI,EAAQ2I,gBAAgBP,EAAarL,IACrCoF,EAAWQ,SACXgF,KAGEiB,EAAqB,SAAC5I,GACxB,IAAMpC,EAAOyK,OAAOQ,OAAO,uCAAwC7I,EAAQpC,MACtEA,IACLoC,EAAQpC,KAAOA,EACfuE,EAAWQ,SACXgF,MAkBJ,OAAO,yBAAKnD,UAAWoD,EAAa,iBAAmB,GAAIkB,aAflC,WACrBhB,GAAa,IAc0EiB,aAXhE,WACvBjB,GAAa,KAWb,yBAAKtD,UAAW,SAAWqD,EAAY,sBAAwB,KAEvDK,IAAgB,4BAAQ1D,UAAU,uBAAuBC,QAAS,kBAT1EwD,GAAaD,QAEb7F,EAAW4F,gCAAgC/H,EAAQjD,KAAOiL,KAS1CA,EAAW,kBAAChB,EAAD,MAAmB,kBAACE,EAAD,OAG1B,qCAEhB,yBAAK1C,UAAW,8BAA8B,0BAAMM,KAAK,MAAMC,aAAW,QAtElE,WACZ,IAAMiE,EAAQ,GAId,OAHAA,EAAMjK,EAAYK,MAAMC,WAAa,kBAACqG,EAAD,MACrCsD,EAAMjK,EAAYK,MAAME,WAAa,kBAACsG,EAAD,MACrCoD,EAAMjK,EAAYK,MAAMG,MAAQ,kBAACuG,EAAD,MACzBkD,EAAMhJ,EAAQhB,MAiEiEiK,GAApC,KAzE1Cf,IA+EQ,8BACKlI,EAAQpC,MAJb,kBAAC,IAAD,CAAMqH,GAAE,6BAAwBoC,EAAxB,YAA8CC,EAA9C,YAAqEtH,EAAQjD,KAChFiD,EAAQpC,OAQzB,yBAAK4G,UAAU,aAEP0D,IACI,kBAAC,EAAD,CAAqBzD,QA7Ed,SAACzF,GACxB,IAAMpB,EAAOyK,OAAOQ,OAAO,wCAC3B,GAAKjL,EAAL,CACA,IAAMsL,EAAatI,EAAgBuI,cAAcvL,EAAMoB,GACvDgB,EAAQoJ,WAAWF,GACnB/G,EAAWQ,SACXgF,QAuEuE,qCAE/D,4BAAQlD,QAAS,kBAAMiD,EAAgB1H,KACnC,kBAACwG,EAAD,MACA,0BAAMhC,UAAU,WAAhB,cAEJ,4BAAQC,QAAS,kBAAM8C,EAAgBvH,KACnC,kBAAC0G,EAAD,MACA,0BAAMlC,UAAU,WAAhB,UAEJ,4BAAQC,QAAS,kBAAM+C,EAAkBxH,KACrC,kBAAC4G,EAAD,MACA,0BAAMpC,UAAU,WAAhB,UAEJ,4BAAQC,QAAS,kBAAMgD,EAAgBzH,KACnC,kBAAC8G,EAAD,MACA,0BAAMtC,UAAU,WAAhB,eAKR0D,IACI,6BACIF,EAAWhI,EAAQJ,SAAShD,KAAI,SAAAwL,GAAY,OACxC,kBAAC,EAAD,CAAiBpD,IAAKoD,EAAarL,GAAIoF,WAAYA,EAC/CkF,mBAAoBA,EACpBC,oBAAqBA,EAAqBtH,QAASoI,EACnDb,gBAAiBiB,EAAoBhB,kBAAmBkB,EACxDjB,gBAAiBU,EAAoBT,gBAAiBkB,EACtDjB,cAAeA,EACfC,YAAY,OAChB,sCAEC,sCC5IlB,SAASyB,EAAT,GAA8I,IAAxGlH,EAAuG,EAAvGA,WAAYC,EAA2F,EAA3FA,iBAAkBkH,EAAyE,EAAzEA,kBAAmBC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,iBAE5H,EAA0C1G,mBAASuG,EAAkB1J,UAArE,mBAAO8J,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,WACbD,EAAiB,YAAIL,EAAkB1J,WACvCsE,YAAW,kBAAMyF,EAAiBL,EAAkB1J,YAAW,IAY7DiK,EAAgB,SAAC7J,GACEqI,OAAOC,QAAP,+CAAuDtI,EAAQpC,SAEpF0L,EAAkBf,cAAcvI,EAAQjD,IACxCoF,EAAWQ,SACXiH,MAGEnB,EAAgB,SAACzI,GACnBsJ,EAAkBb,cAAczI,EAAQjD,IACxCoF,EAAWQ,SACXiH,KAGEjB,EAAkB,SAAC3I,GACrBsJ,EAAkBX,gBAAgB3I,EAAQjD,IAC1CoF,EAAWQ,SACXiH,KAGEE,EAAgB,SAAC9J,GACnB,IAAMpC,EAAOyK,OAAOQ,OAAO,uCAAwC7I,EAAQpC,MACtEA,IACLoC,EAAQpC,KAAOA,EACfuE,EAAWQ,SACX4G,MAmBJ,OAAO,yBAAK/E,UAAU,qBAClB,yBAAKA,UAAU,QACX,wBAAIA,UAAU,SAAS8E,EAAkB1L,MACzC,yBAAK4G,UAAU,2CACX,kBAAC,EAAD,CAAqBC,QAzDT,SAACzF,GACrB,IAAMpB,EAAOyK,OAAOQ,OAAO,wCAC3B,GAAKjL,EAAL,CACA,IAAMsL,EAAatI,EAAgBuI,cAAcvL,EAAMoB,GACvDsK,EAAkBF,WAAWF,GAC7B/G,EAAWQ,SACXiH,QAoDQ,4BAAQnF,QAbG,WACnB,IAAM7G,EAAOyK,OAAOQ,OAAO,6CAA2CS,EAAkB1L,MACnFA,IACL0L,EAAkB1L,KAAOA,EACzBuE,EAAWQ,SACX4G,OASY,kBAAC/C,EAAD,MACA,0BAAMhC,UAAU,WAAhB,cAEJ,4BAAQC,QAAS,kBAAM+E,EAAeF,KAClC,kBAAC5C,EAAD,MACA,0BAAMlC,UAAU,WAAhB,UAEJ,4BAAQC,QAAS,kBAAMgF,EAAiBH,KACpC,kBAAC1C,EAAD,MACA,0BAAMpC,UAAU,WAAhB,UAEJ,4BAAQC,QAjCG,WACE4D,OAAOC,QAAP,mDAAwDgB,EAAkB1L,SAE/FwE,EAAiB2H,wBAAwBT,EAAkBvM,IAC3DoF,EAAWQ,SACX4G,OA6BY,kBAACzC,EAAD,MACA,0BAAMtC,UAAU,WAAhB,4BAIZ,yBAAKA,UAAU,6BAEPkF,EAAc9M,KAAI,SAAAoD,GAAO,OACrB,kBAAC,EAAD,CAAiBgF,IAAKhF,EAAQjD,GAAIoF,WAAYA,EAC1CkF,mBAAoBjF,EAAiBrF,GACrCuK,oBAAqBgC,EAAkBvM,GAAIiD,QAASA,EACpDuH,gBAAiBkB,EAAejB,kBAAmBmB,EACnDlB,gBAAiBoC,EAAenC,gBAAiBoC,EACjDnC,cAAeiC,SCnGhC,SAASI,KACZ,OAAO,kBAAC,IAAD,CAAiBjM,KAAMkM,IAAgBhM,MAAO,YCMlD,SAASiM,GAAT,GAA+C,IAAf/H,EAAc,EAAdA,WAC7BU,EAAWC,cACTuE,EAAuB8C,cAAvB9C,mBACR,EAAgDtE,mBAAS,MAAzD,mBAAOX,EAAP,KAAyBgI,EAAzB,KACA,EAAoErH,mBAAS,IAA7E,mBAAOsH,EAAP,KAAmCC,EAAnC,KAEAlH,qBAAU,WACNjB,EAAWkB,wBAAwBgE,GACnC,IAAMkD,EAA2BpI,EAAWK,QAAQC,oBAAoB4E,GACxE+C,EAAoBG,GACpBD,EAA8BC,EAAyB1I,YACvDM,EAAWmB,iBAAiB,KAC5BnB,EAAWoB,oBAAoB,QAChC,CAACpB,EAAYkF,IAEhB,IAiCMkC,EAAmB,WACrBe,EAA8B,YAAIlI,EAAiBP,cAGjD2H,EAAiB,SAACzH,GACpBK,EAAiBoI,wBAAwBzI,EAAShF,IAClDoF,EAAWQ,SACX2H,EAA8B,YAAIlI,EAAiBP,cAGjD4H,EAAmB,SAAC1H,GACtBK,EAAiBqI,0BAA0B1I,EAAShF,IACpDoF,EAAWQ,SACX2H,EAA8B,YAAIlI,EAAiBP,cAYvD,OAAO,yBAAK2C,UAAU,wBAClB,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,SACiB,WAAX,OAAhBpC,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBpD,MACd,0BAAM8F,KAAK,MAAMC,aAAW,SAA5B,gBACA,0BAAMD,KAAK,MAAMC,aAAW,SAA5B,gBAHR,WAIG3C,QAJH,IAIGA,OAJH,EAIGA,EAAkBxE,MACrB,yBAAK4G,UAAU,0CACX,4BAAQC,QAlES,WACzB,IAAMiG,EAAerC,OAAOQ,OAAO,qCACnC,GAAI6B,EAAc,CACd,IAAM3I,EAAW,IAAIP,EAAkBkJ,GACjCtI,EAAmBD,EAAWK,QAAQC,oBAAoB4E,GAChEjF,EAAiBuI,qBAAqB5I,GACtCI,EAAWQ,SACX2H,EAA8B,YAAIlI,EAAiBP,gBA4D3C,kBAAC2D,EAAD,MACA,0BAAMhB,UAAU,WAAhB,uBAEJ,4BAAQC,QAlDW,WAC3B,IAAM7G,EAAOyK,OAAOQ,OAAP,qCAAsE,UAA1BzG,EAAiBpD,KAAmB,WAAa,iBAAgBoD,EAAiBxE,MACtIA,IACLwE,EAAiBxE,KAAOA,EACxBuE,EAAWQ,SACXyH,EAAoB,eAAKhI,IACzBD,EAAWkB,wBAAwB,MACnCa,YAAW,WACPkG,EAAoBhI,GACpBD,EAAWkB,wBAAwBgE,KACpC,MAyCS,kBAACb,EAAD,MACA,0BAAMhC,UAAU,WAAhB,cAEJ,uBAAGE,QAAQ,EAAM3H,GAAG,+BAA+BmI,KAAK,KAAxD,KACA,4BAAQT,QA1BW,WAC3B,IAAMmG,EAA+BzG,SAASC,eAAe,gCACvDyG,EAAUxI,KAAKyI,UAAU1I,EAAiBzB,SAAU,KAAM,GAC1DoK,EAAO,IAAIC,KAAK,CAACH,GAAU,CAAE7L,KAAM,qBACzC4L,EAA6B1F,KAAO+F,IAAIC,gBAAgBH,GACxDH,EAA6BO,SAA7B,UAA2CvJ,EAAiBxC,MAAMU,MAAK,SAAAC,GAAC,OAAIA,EAAEf,OAASoD,EAAiBpD,QAAMpB,KAA9G,cAAwHwE,EAAiBxE,KAAzI,SACAgN,EAA6B/F,UAqBjB,kBAACmF,GAAD,MACA,0BAAMxF,UAAU,WAAhB,aAEJ,4BAAQC,QApEW,WACN4D,OAAOC,QAAP,2CAA6E,UAA1BlG,EAAiBpD,KAAmB,WAAa,gBAApG,YACboD,EAAiBxE,SAEzBuE,EAAWK,QAAQ4I,uBAAuB/D,GAC1ClF,EAAWQ,SACXE,EAAS,QA+DG,kBAACiE,EAAD,MACA,0BAAMtC,UAAU,WAAhB,eAKR6F,EAA2BzN,KAAI,SAAAmF,GAAQ,OACnC,kBAAC,EAAD,CAA4BiD,IAAKjD,EAAShF,GAAIoF,WAAYA,EACtDmH,kBAAmBvH,EAAUK,iBAAkBA,EAC/CmH,iBAAkBA,EAAkBC,eAAgBA,EACpDC,iBAAkBA,Q,0CChH/B,SAAS4B,GAAT,GAAqD,IAA3B1G,EAA0B,EAA1BA,SAAU2G,EAAgB,EAAhBA,aA4CjCC,EAASrF,mBAEXsF,EAAkB,EAiBhBC,EAAc,WAVG,IAACC,IAWpBF,GAAmB,EAVnBtH,YAAW,WACP,GAAIwH,IAAaF,EAAiB,CAE9B,IAAKD,EAAOnF,QAAQuF,YAAa,OACjChH,EAAS4G,EAAOnF,QAAQuF,kBAXR,MA8B5B,OAAO,yBAAKnH,UAAU,mBAClB,kBAAC,KAAD,CAAWoH,KAAK,KAAKC,aAAcP,EAAcQ,OAV7B,WACpB,IAAMA,EAASzD,OAAO0D,aACf5H,SAAS6H,gBAAgBC,cACzB9H,SAAS1E,KAAKwM,aACrB,OAAIH,GAAU,IAAY,OACtBA,GAAU,IAAY,OACnB,OAIkDI,GACrDvH,SAAU,SAACwH,GAAD,OAAWV,KAAeW,QAAS,SAAC7G,GAAD,OAAWkG,KACxDY,qBA/BqB,SAACC,GAC1Bf,EAAOnF,QAAUkG,GA8B+BC,WA9E9B,CAClBC,WAAY,CACR,CAAC,cAAe,OAAQ,YAAa,SAAU,UAC/C,CAAC,YAAa,eACd,CAAC,gBACD,CAAC,QAAS,iBAAkB,QAC5B,CAAC,QAAS,OAAQ,QAAS,QAAS,SACpC,CAAC,aAAc,aAEnBC,QAAS,CACL,CACIC,IAAK,IACL9O,KAAM,cAEV,CACI8O,IAAK,KACL9O,KAAM,aAEV,CACI8O,IAAK,KACL9O,KAAM,gBAEV,CACI8O,IAAK,KACL9O,KAAM,cAEV,CACI8O,IAAK,KACL9O,KAAM,iBAEV,CACI8O,IAAK,aACL9O,KAAM,4BAEV,CACI8O,IAAK,MACL9O,KAAM,oB,aC1CT+O,IAA+D,IAAjDtE,OAAOuE,SAASC,OAAO3M,QAAQ,aAAsB,4BAA6B,2CCGhG4M,GAAb,0FAEI,WACI,OAAOC,aAAaC,QAAQ,WAHpC,yDAMI,WAAWC,GAAX,mBAAAvJ,EAAA,6DACUwJ,EAAU,CAAE,eAAgB,qBAC5BC,EAAYlO,KAAKmO,gBAEnBF,EAAO,cAAoBC,GAJnC,SAM2BE,MAAM,GAAD,OAAIV,IAAJ,OAAkBM,GAAY,CACtDK,OAAQ,MACRJ,QAASA,IARjB,YAMUK,EANV,QAUiBC,GAVjB,iCAUkCD,EAAS7N,OAV3C,iEAWgB6N,EAAS7N,OAXzB,sEANJ,iHAoBI,WAAYuN,EAAUxN,GAAtB,uBAAAiE,EAAA,6DACUwJ,EAAU,CAAE,eAAgB,qBAC5BC,EAAYlO,KAAKmO,gBAEnBF,EAAO,cAAoBC,GAE3BM,EAAapL,KAAKyI,UAAUrL,GAC5BN,EAAO,KACe,kBAAfsO,GAA2BA,EAAW/O,OAAS,MACtDwO,EAAQ,oBAAsB,OAC9B/N,EAAOuO,KAAKC,KAAKF,KAGjBP,EAAQ,yBAAsBrO,EAC9BM,EAAOsO,GAdf,SAiB2BJ,MAAM,GAAD,OAAIV,IAAJ,OAAkBM,GAAY,CACtDK,OAAQ,OACR7N,KAAMN,EACN+N,QAASA,IApBjB,YAiBUK,EAjBV,QAsBiBC,GAtBjB,kCAsBkCD,EAAS7N,OAtB3C,kEAuBgB6N,EAAS7N,OAvBzB,sEApBJ,kHA8CI,WAAWuN,EAAUxN,GAArB,mBAAAiE,EAAA,6DACUwJ,EAAU,CAAE,eAAgB,qBAC5BC,EAAYlO,KAAKmO,gBAEnBF,EAAO,cAAoBC,GAJnC,SAM2BE,MAAM,GAAD,OAAIV,IAAJ,OAAkBM,GAAY,CACtDK,OAAQ,MACR7N,KAAM4C,KAAKyI,UAAUrL,GACrByN,QAASA,IATjB,YAMUK,EANV,QAWiBC,GAXjB,iCAWkCD,EAAS7N,OAX3C,iEAYgB6N,EAAS7N,OAZzB,sEA9CJ,qHA6DI,WAAcuN,EAAUxN,GAAxB,mBAAAiE,EAAA,6DACUwJ,EAAU,CAAE,eAAgB,qBAC5BC,EAAYlO,KAAKmO,gBAEnBF,EAAO,cAAoBC,GAJnC,SAM2BE,MAAM,GAAD,OAAIV,IAAJ,OAAkBM,GAAY,CACtDK,OAAQ,SACR7N,KAAM4C,KAAKyI,UAAUrL,GACrByN,QAASA,IATjB,YAMUK,EANV,QAWiBC,GAXjB,iCAWkCD,EAAS7N,OAX3C,iEAYgB6N,EAAS7N,OAZzB,sEA7DJ,gECDakO,GAAb,yMAEI,WAAmBC,GAAnB,SAAAnK,EAAA,sEACiBzE,KAAK6O,KAAL,6BAAgCD,IADjD,wFAFJ,4DAA+Cf,I,MCCxC,SAASiB,GAAT,GAA4C,IAAdC,EAAa,EAAbA,UAOjC,OAAO,yBAAKxJ,UAAU,sBAClB,4BAAI,uBAAGU,KAAI,qDAAgD8I,EAAUC,eAAiBD,EAAUpQ,OAChG,6BAAK,2BAAIoQ,EAAUE,MAAd,IAAsBF,EAAUG,KAAhC,KAAwCH,EAAUI,YACvD,yBAAK5J,UAAU,YACf,6BACI,iDAAyB,8BAAOwJ,EAAUK,cAE9C,6BACI,+CAAuB,8BAAOL,EAAUM,SAE5C,6BACI,yCAAiB,8BAAON,EAAUO,MAAjB,UAErB,6BACI,mDAA2B,kCAAQP,EAAUQ,oBAEjD,+BACI,+BACI,4BAEQR,EAAUS,eAAe7R,KAAI,SAAA8R,GAAa,OACtC,wBAAI1J,IAAG,UAAKgJ,EAAUpQ,KAAf,YAAuB8Q,EAAc9Q,KAArC,WAAmD,2BAAI8Q,EAAc9Q,KAAK+Q,cAAcC,UAAU,EAAG,SAIxH,4BAEQZ,EAAUS,eAAe7R,KAAI,SAAA8R,GAAa,OACtC,wBAAI1J,IAAG,UAAKgJ,EAAUpQ,KAAf,YAAuB8Q,EAAc9Q,KAArC,WAAoD8Q,EAAcrK,MAAzE,KAAkFqK,EAAcG,UAAY,EAAI,IAAM,GAAIH,EAAcG,SAAxI,WAMpB,6BACI,uDADJ,IACiC,8BACzBb,EAAUc,cAAcC,QAAO,SAAAC,GAAY,OAAIA,EAAaC,mBAAiBrS,KACzE,SAAAoS,GAAY,gBAAOA,EAAapR,KAApB,YAA4BoR,EAAaH,UAAY,EAAI,IAAM,IAA/D,OAAoEG,EAAaH,aAC/FK,KAAK,QAGf,6BACI,2DADJ,IACwC,8BAChClB,EAAUmB,OAAOJ,QAAO,SAAAK,GAAK,OAAIA,EAAMH,mBAAiBrS,KACpD,SAAAwS,GAAK,gBAAOA,EAAMxR,KAAb,YAAqBwR,EAAMP,UAAY,EAAI,IAAM,IAAjD,OAAsDO,EAAMP,aACnEK,KAAK,QAGf,6BACI,wCADJ,IACqB,8BAtDN,WACf,IAAMG,EAAqB,GAAKrB,EAAUmB,OAAOrP,MAAK,SAAAC,GAAC,MAAe,kBAAXA,EAAEnC,QAAuBiR,SACpF,MAAM,wBAAN,OAA4BQ,GAoDAC,KAE5B,6BACI,uCADJ,IACoB,8BAAOtB,EAAUuB,YAGN,OAA3BvB,EAAUwB,aAAwB,qCAAQ,oCACtC,yBAAKhL,UAAU,YACf,6BACI,uDADJ,8CAEgDwJ,EAAUpQ,KAF1D,OAEoEoQ,EAAUwB,aAAaC,qBAF3F,oCAE+IzB,EAAUwB,aAAaE,iBAFtK,KAE0L1B,EAAUwB,aAAaG,cAAgB,EAAI,IAAM,GAAI3B,EAAUwB,aAAaG,aAFtQ,0CAE2T3B,EAAUpQ,KAFrU,2CAIQL,OAAOD,KAAK0Q,EAAUwB,aAAaI,cAAchT,KAAI,SAAA+B,GAAC,OAAIkR,SAASlR,MAAI/B,KAAI,SAAAkT,GAAW,OACb,IAArE9B,EAAUwB,aAAaI,aAAaE,GAAaC,gBAAwB,KAAO,yBAAK/K,IAAG,UAAKgJ,EAAUpQ,KAAf,wBAAmCkS,IACvH,2BAAoB,IAAhBA,EAAoB,sBAApB,gBAAqDA,EAArD,aAAqE9B,EAAUwB,aAAaI,aAAaE,GAAaC,gBAAtH,iBACH/B,EAAUwB,aAAaI,aAAaE,GAAaE,OAAOd,KAAK,a,wBCpEvF,SAASe,GAAT,GAAsE,IAArB9N,EAAoB,EAApBA,WAAY1C,EAAQ,EAARA,KAEhE,EAAwCsD,qBAAxC,mBAAOmN,EAAP,KAAqBC,EAArB,KACIC,EAAW,KAEfhN,qBAAU,WACNgN,EAAWC,IACXF,EAAgBC,KACjB,CAACD,EAAiBC,IAErB,IAAME,EAAY,uCAAG,WAAOzC,GAAP,iBAAAnK,EAAA,6DACX6M,EAAOpO,EAAWqO,cAAc5C,IADrB,SAEO2C,EAAKD,aAAazC,GAFzB,OAEXG,EAFW,OAGjB7J,SAASC,eAAeyJ,GAAa4C,UAAYC,KAAeC,eAAe,kBAAC,GAAD,CAAoB3C,UAAWA,KAH7F,2CAAH,sDAUZ4C,EAAoB,SAACC,GACvB,IADgC,EAE1BC,EAAUD,EAAKE,SADP,+BAEVC,EAAgBH,EAHY,cAIZC,GAJY,yBAJPjD,EAQdoD,EAJqB,QAK5BD,EAAgBA,EAAcE,QAAQD,EAAM,IATvBpD,EAS+CoD,EAAM,GARvEP,KAAeC,eAAe,yBAAK5T,GAAI8Q,OAS1C3J,YAAW,kBAAMoM,EAAaW,EAAM,MAAK,IAF7C,2BAA8B,IAJE,8BAQhC,OAAOD,GAGLX,EAAa,WAEf,OADWO,EAAkBnR,IAKjC,OAAO,yBAAK0R,wBAAyB,CAAEC,OAAQlB,KCrC5C,SAASmB,GAAT,GAAoF,IAA/ClP,EAA8C,EAA9CA,WAAYnC,EAAkC,EAAlCA,QAASsR,EAAyB,EAAzBA,sBAE7D,EAAgCvO,oBAAS,GAAzC,mBAAOwO,EAAP,KAAiBC,EAAjB,KACIC,EAAqB,KACrBC,GAA2B,EAgBzBC,EAAiB,WACnBF,EAAqB,KACrBD,GAAY,IAUhB,OAFAF,EAAsBM,KAxBT,WACTJ,GAAY,IAyBT,yBAAKhN,UAAU,oBAEd+M,EAAW,oCACP,4BAAQ9M,QAzBP,WACJiN,GAIL1R,EAAQP,KAAOgS,EACftP,EAAW0P,cACXL,GAAY,IALRG,MAwBQ,0BAAM7M,KAAK,MAAMC,aAAW,QAA5B,gBADJ,oBAGA,4BAAQN,QAASkN,GACb,0BAAM7M,KAAK,MAAMC,aAAW,UAA5B,UADJ,uBAGE,qCAGNwM,EACI,oCACI,kBAAC,GAAD,CAAgB5M,SArBX,SAACN,GAClBqN,GAA2B,EAC3BD,EAAqBpN,GAmB+BiH,aAActL,EAAQP,QAElE,kBAACwQ,GAAD,CAAuC9N,WAAYA,EAAY1C,KAAMO,EAAQP,Q,MClDtF,SAASqS,GAAT,GAAuG,EAA5E3P,WAA6E,IAAjEb,EAAgE,EAAhEA,MAAgE,IAAzDyQ,qBAAyD,MAAzC,SAACzQ,KAAwC,EAAzBgQ,EAAyB,EAAzBA,sBAEjF,EAAkCvO,oBAAc,OAALzB,QAAK,IAALA,OAAA,EAAAA,EAAO1E,KAAI,SAAAmD,GAAC,OAAIA,EAAEiS,aAAY,IAAzE,mBAAOC,EAAP,KAAkBC,EAAlB,KAeMC,EAAiB,SAACC,EAAMC,EAAMhO,GAChC+N,EAAKC,GAAQhO,EACb0N,EAAc,YAAIE,IAClBC,EAAa,YAAID,KAMrB,OAHAX,EAAsBgB,QAlBN,WACZL,EAAUrT,KAAK,IAAIkC,GACnBiR,EAAc,YAAIE,IAClBC,EAAa,YAAID,KAkBd,yBAAKzN,UAAU,mBAClB,2BAAOA,UAAU,aACb,+BACI,4BACI,sCACA,sCACA,sCACA,mDACA,8BANR,OASQyN,QATR,IASQA,OATR,EASQA,EAAWrV,KAAI,SAAAmD,GAAC,OAAI,wBAAIiF,IAAKjF,EAAEhD,IAC3B,4BACI,2BAAOiI,IAAG,UAAKjF,EAAEhD,GAAP,eAAwB4H,SAAU,SAACY,GAAD,OAAW4M,EAAepS,EAAG,QAASwF,EAAMxB,OAAOM,QAC3FA,MAAOtE,EAAEgB,OAAS,MAE1B,4BACI,2BAAOiE,IAAG,UAAKjF,EAAEhD,GAAP,cAAuB4H,SAAU,SAACY,GAAD,OAAW4M,EAAepS,EAAG,OAAQwF,EAAMxB,OAAOM,QACzFA,MAAOtE,EAAEkB,MAAQ,MAEzB,4BACI,2BAAO+D,IAAG,UAAKjF,EAAEhD,GAAP,eAAwB4H,SAAU,SAACY,GAAD,OAAW4M,EAAepS,EAAG,QAASwF,EAAMxB,OAAOM,QAC3FA,MAAOtE,EAAEiB,OAAS,MAE1B,4BACI,2BAAOhC,KAAK,SAASgG,IAAG,UAAKjF,EAAEhD,GAAP,gBAAyB4H,SAAU,SAACY,GAAD,OAAW4M,EAAepS,EAAG,SAAU8P,SAAStK,EAAMxB,OAAOM,SACpHA,MAAOtE,EAAEmB,QAAU,KAE3B,4BACI,4BAAQuD,QAAS,kBA5CrB2N,EA4CsCrS,EA3CtDkS,EAAUnT,OAAOmT,EAAU/R,QAAQkS,GAAO,GAC1CL,EAAc,YAAIE,SAClBC,EAAa,YAAID,IAHF,IAACG,IA6CQ,0BAAMtN,KAAK,MAAMC,aAAW,UAA5B,+BCvDzB,SAASwN,GAAT,GAA+E,IAA/CpQ,EAA8C,EAA9CA,WAAYnC,EAAkC,EAAlCA,QAASsR,EAAyB,EAAzBA,sBAExD,EAAgCvO,oBAAS,GAAzC,mBAAOwO,EAAP,KAAiBC,EAAjB,KACIgB,EAAqB,KACrBd,GAA2B,EACzBe,EAAiB,GAgBjBd,EAAiB,WACnBa,EAAqB,GACrBhB,GAAY,IAchB,OAFAF,EAAsBM,KA5BT,WACTJ,GAAY,IA6BT,yBAAKhN,UAAU,oBAEd+M,EAAW,oCACP,4BAAQ9M,QATJ,WACZgO,EAAeH,YASH,0BAAMxN,KAAK,MAAMC,aAAW,QAA5B,UADJ,mBAGA,4BAAQN,QAhCP,WACJiN,GAIL1R,EAAQsB,MAAQkR,EAChBrQ,EAAW0P,cACXL,GAAY,IALRG,MA+BQ,0BAAM7M,KAAK,MAAMC,aAAW,QAA5B,gBADJ,oBAGA,4BAAQN,QAASkN,GACb,0BAAM7M,KAAK,MAAMC,aAAW,UAA5B,UADJ,uBAGE,qCAEV,6BAEIwM,EACI,oCACI,kBAACO,GAAD,CAAiBxQ,MAAOtB,EAAQsB,MAAOyQ,cA7BjC,SAACzQ,GACnBoQ,GAA2B,EAC3Bc,EAAqBlR,GA4BLgQ,sBAAuBmB,KAE/B,2BAAOjO,UAAU,aACb,+BACI,4BACI,sCACA,sCACA,oDAGAxE,EAAQsB,MAAM1E,KAAI,SAAAmD,GAAC,OAAI,wBAAIiF,IAAKjF,EAAEhD,IAC9B,4BACIgD,EAAEkB,KACE,uBAAGiE,KAAMnF,EAAEkB,MAAOlB,EAAEgB,OACpB,8BAAOhB,EAAEgB,QAEjB,4BAAKhB,EAAEiB,OACP,4BAAKjB,EAAEmB,eC1EhC,SAASwR,KACZ,OAAO,kBAAC,IAAD,CAAiB3U,KAAM4U,IAAQ1U,MAAO,YCD1C,SAAS2U,KACZ,OAAO,kBAAC,IAAD,CAAiB7U,KAAM8U,IAAQ5U,MAAO,YCI1C,SAAS6U,GAAT,GAAsC,IAAf3Q,EAAc,EAAdA,WACpBU,EAAWC,cACjB,EAA+DqH,cAAvD9C,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,oBAAqBzH,EAAjD,EAAiDA,UACjD,EAA8BkD,mBAAS,MAAvC,mBAAO/C,EAAP,KAAgB+S,EAAhB,KACMC,EAAgB,GAEtB5P,qBAAU,WAiBNjB,EAAWkB,wBAAwBgE,GAEnC,IAAM4L,EAAkB9Q,EAAWK,QAAQC,oBAAoB4E,GAC1DrF,qBAAqBsF,GAAqB4L,oBAAoBrT,GACnEkT,EAAWE,GApBkB,WACzB,IAAM3J,EAAoBnH,EAAWK,QAAQC,oBAAoB4E,GAC5DrF,qBAAqBsF,GACpB6L,EAAc7J,EAAkB8J,eAAevT,EAAWwH,GAC1DgM,EAAc/J,EAAkBgK,eAAezT,EAAWwH,GAC5D8L,EACAhR,EAAWmB,iBAAX,6BAAkD+D,EAAlD,YAAwEC,EAAxE,YAA+F6L,EAAYpW,KAE3GoF,EAAWmB,iBAAX,6BAAkD+D,IAElDgM,EACAlR,EAAWoB,oBAAX,6BAAqD8D,EAArD,YAA2EC,EAA3E,YAAkG+L,EAAYtW,KAE9GoF,EAAWoB,oBAAoB,MASvCgQ,KACD,CAACpR,EAAYkF,EAAoBC,EAAqBzH,IAGzD,IAuBMgK,EAAgB,WACGxB,OAAOC,QAAP,+CAAuDtI,EAAQpC,SAE1DuE,EAAWK,QAAQC,oBAAoB4E,GAC5DrF,qBAAqBsF,GACRiB,cAAcvI,EAAQjD,IACxCoF,EAAWQ,SACXE,EAAS,sBAAD,OAAuBwE,MAGnC,OAAO,yBAAK7C,UAAU,eAEdxE,EAAU,oCACN,yBAAKwE,UAAU,4BACX,wBAAIA,UAAU,SAASxE,EAAQpC,MAC/B,yBAAK4G,UAAU,qCACX,4BAAQC,QAlCX,WACb,IAAM7G,EAAOyK,OAAOQ,OAAO,uCAAwC7I,EAAQpC,MAC3E,GAAIA,EAAM,CACN,IAAMqV,EAAkB9Q,EAAWK,QAAQC,oBAAoB4E,GAC1DrF,qBAAqBsF,GAAqB4L,oBAAoBrT,GACnEoT,EAAgBrV,KAAOA,EACvBuE,EAAWQ,SACXoQ,EAAW,eAAKE,IAChB/O,YAAW,WACP6O,EAAWE,KACZ,MAyBa,kBAACzM,EAAD,MACA,0BAAMhC,UAAU,WAAhB,cAEJ,4BAAQC,QAxBX,WACbuO,EAAcpB,SAwBM,kBAACc,GAAD,MACA,0BAAMlO,UAAU,WAAhB,WAEJ,4BAAQC,QA/CH,WACrB,IAAM+O,EAAO,UAAMnL,OAAOuE,SAASC,OAAtB,8BAAkDxF,EAAlD,YAAwEC,EAAxE,YAA+FzH,GAC5G4T,UAAUC,UAAUC,UAAUH,KA8CV,kBAACZ,GAAD,MACA,0BAAMpO,UAAU,WAAhB,oBAaR,CACI,UAAa,kBAAC,GAAD,CAA2BQ,IAAKhF,EAAQjD,GACjDoF,WAAYA,EAAYnC,QAASA,EAAS4T,SAAU/J,EAAeyH,sBAAuB0B,IAE9F,KAAQ,kBAAC,GAAD,CAAsBhO,IAAKhF,EAAQjD,GACvCoF,WAAYA,EAAYnC,QAASA,EAAS4T,SAAU/J,EAAeyH,sBAAuB0B,KAEhGhT,EAAQhB,OAGZ,sC,gBChHL6U,GAAb,4MAEIC,QAAU,aAFd,EAGIC,SAAW,aAHf,kFAKI,WAAYC,GAAZ,eAAAtQ,EAAA,sEAC2BzE,KAAKgV,MAAL,cAA0BD,GADrD,OACUzG,EADV,OAEIR,aAAamH,QAAQ,QAAS3G,EAAS4G,OACvCpH,aAAamH,QAAQ,gBAAiBF,EAAYI,UAClDnV,KAAK6U,UAJT,gDALJ,oFAYI,WACI,QAAS/G,aAAaC,QAAQ,WAbtC,sCAgBI,WACI,OAAOD,aAAaC,QAAQ,mBAjBpC,oBAoBI,WACID,aAAasH,WAAW,SACxBtH,aAAasH,WAAW,iBACxBpV,KAAK8U,eAvBb,GAAoCjH,ICE7B,SAASwH,KACZ,OAAO,kBAAC,IAAD,CAAiBvW,KAAMwW,MCD3B,SAASC,KACZ,OAAO,kBAAC,IAAD,CAAiBzW,KAAM0W,IAAcxW,MAAO,YCChD,SAASyW,GAAT,GAA4C,IAAfvS,EAAc,EAAdA,WAE1B8D,EAAeC,mBAWrB,OAAO,yBAAK1B,UAAU,qBAClB,4BAAQA,UAAU,oBAAoBC,QATrB,WACjBwB,EAAaG,QAAQC,UAAUC,OAAO,sBASlC,kBAACgO,GAAD,OAEJ,yBAAK/N,IAAKN,EAAczB,UAAU,gBAC9B,4BAAQC,QATD,WACXtC,EAAWqO,cAAcqD,IAAgBc,WASjC,kBAACH,GAAD,MADJ,uBChBL,SAASI,GAAT,GAAiC,IAAfzS,EAAc,EAAdA,WAErB,EAA0CY,mBAAS,KAAnD,mBAAO8R,EAAP,KAAsBvR,EAAtB,KACA,EAAgDP,mBAAS,KAAzD,mBAAO+R,EAAP,KAAyBvR,EAAzB,KACA,EAAgDR,mBAAS,MAAzD,mBAAOX,EAAP,KAAyBgI,EAAzB,KAcA,OAJAjI,EAAWmB,iBAAmBA,EAC9BnB,EAAWoB,oBAAsBA,EACjCpB,EAAWkB,wBAVqB,SAACgE,GAC7B,IAAIkD,EAA2B,KAC3BlD,IACAkD,EAA2BpI,EAAWK,QAAQC,oBAAoB4E,IAEtE+C,EAAoBG,IAOjB,yBAAK/F,UAAU,UAClB,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMS,GAAE,IAAOlI,GAAG,iBACd,kBAAC,IAAD,CAAiBgB,KAAMgX,MAD3B,YAIJ,yBAAKvQ,UAAU,cAEPpC,EACI,kBAAC,IAAD,CAAM6C,GAAE,6BAAwB7C,EAAiBrF,IAAMA,GAAG,6BAA6BqF,EAAiBxE,MACxG,sCAGZ,yBAAK4G,UAAU,kBAAkBzH,GAAG,yBAChC,0BAAMyH,UAAS,qBAAgBqQ,EAAgB,mBAAqB,uBAI5DA,EAAgB,kBAAC,IAAD,CAAM5P,GAAI4P,GACtB,kBAAC,IAAD,CAAiB9W,KAAMiX,OAEvB,kBAAC,IAAD,CAAiBjX,KAAMiX,IAAaxQ,UAAU,kBAG1D,mCACA,0BAAMA,UAAS,qBAAgBsQ,EAAmB,mBAAqB,uBAG/DA,EAAmB,kBAAC,IAAD,CAAM7P,GAAI6P,GACzB,kBAAC,IAAD,CAAiB/W,KAAMkX,OAEvB,kBAAC,IAAD,CAAiBlX,KAAMkX,IAAczQ,UAAU,kBAIvDrC,EAAWqO,cAAcqD,IAAgBqB,kBAAoB,kBAAC,GAAD,CAAmB/S,WAAYA,IAAgB,wC,MC1DzH,SAASgT,GAAT,GAAoC,IAAfhT,EAAc,EAAdA,WACxB,EAAgCY,mBAAS,MAAzC,mBAAOqR,EAAP,KAAiBgB,EAAjB,KACA,EAAgCrS,mBAAS,MAAzC,mBAAOsS,EAAP,KAAiBC,EAAjB,KAEAlS,qBAAU,WACNjB,EAAWmB,iBAAiB,MAC5BnB,EAAWoB,oBAAoB,QAChC,CAACpB,IAEJ,IAAMoT,EAAK,uCAAG,sBAAA7R,EAAA,+EAEAvB,EAAWqO,cAAcqD,IAAgB0B,MAAM,CACjDnB,WAAUiB,aAHR,sDAMN9S,MAAM,yCANA,wDAAH,qDAUX,OAAO,0BAAMiC,UAAU,YAAYgR,SAAU,SAAArY,GAAC,OAAIA,EAAEwG,mBAChD,2BAAO3E,KAAK,OAAOpB,KAAK,WAAW+G,SAAU,SAACY,GAAD,OAAW6P,EAAY7P,EAAMxB,OAAOM,QAAQiB,YAAY,YACrG,2BAAOtG,KAAK,WAAWpB,KAAK,WAAW+G,SAAU,SAACY,GAAD,OAAW+P,EAAY/P,EAAMxB,OAAOM,QAAQiB,YAAY,kBACzG,4BAAQtG,KAAK,SAASyF,QAAS8Q,GAA/B,sBCvBD,SAASE,GAAT,GAAqC,IAAftT,EAAc,EAAdA,WAQzB,OANAiB,qBAAU,WACNjB,EAAWmB,iBAAiB,MAC5BnB,EAAWoB,oBAAoB,MAC/BpB,EAAWqO,cAAcqD,IAAgBc,WAC1C,CAACxS,IAEG,qC,MCNJ,SAASuT,KACZ,OAAO,yBAAKlR,UAAU,uBAClB,kBAAC,IAAD,CAAiBA,UAAU,iBAAiBzG,KAAM4X,OCanD,SAASC,GAAT,GAA8B,IAAfzT,EAAc,EAAdA,WAEZ0T,EAAW1T,EAAWqO,cAAcqD,IAE1C,EAAqB9Q,mBAAS8S,EAASX,mBAAhCY,EAAP,oBACA,EAAoC/S,oBAAS,GAA7C,mBAAOgT,EAAP,KAAmBC,EAAnB,KAIA,OAFA7T,EAAW8T,uBAAyBD,EAE7B,yBAAKxR,UAAU,OAEduR,EAAa,kBAAC,GAAD,MAAyB,qCAE1C,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAQ5T,WAAYA,IACpB,yBAAKqC,UAAU,mBACX,kBAAC,IAAD,KAEKsR,EACG,oCACI,kBAAC,IAAD,CAAOI,KAAK,4BAA4BlW,QAAS,kBAACmF,EAAD,CAAwBhD,WAAYA,MACrF,kBAAC,IAAD,CAAO+T,KAAK,yEAAyElW,QAAS,kBAAC,GAAD,CAAamC,WAAYA,MACvH,kBAAC,IAAD,CAAO+T,KAAK,yCAAyClW,QAAS,kBAAC,GAAD,CAAsBmC,WAAYA,MAChG,kBAAC,IAAD,CAAO+T,KAAK,UAAUlW,QAAS,kBAACyV,GAAD,CAAYtT,WAAYA,MACvD,kBAAC,IAAD,CAAO+T,KAAK,IAAIlW,QAAS,kBAAC,EAAD,CAAMmC,WAAYA,MAC3C,kBAAC,IAAD,CAAO+T,KAAK,IAAIlW,QAAS,kBAAC,IAAD,CAAUiF,GAAI,SACrC,oCACF,kBAAC,IAAD,CAAOiR,KAAK,SAASlW,QAAS,kBAAC,GAAD,CAAWmC,WAAYA,MACrD,kBAAC,IAAD,CAAO+T,KAAK,IAAIlW,QAAS,kBAAC,IAAD,CAAUiF,GAAI,aACvC,kBAAC,IAAD,CAAOiR,KAAK,IAAIlW,QAAS,kBAAC,IAAD,CAAUiF,GAAI,kBC/C5D,IAAMkR,GAAb,WAKI,aAAe,yBAHfnT,UAAY,KAGE,KAFdE,OAAS,KAGLjE,KAAK+D,UAAY,GACjB/D,KAAKiE,OAAS,GAPtB,uDAUI,SAAoBmE,GAChB,OAAOpI,KAAK+D,UAAUvC,OAAOxB,KAAKiE,QAAQpD,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAOsK,OAXrE,iCAcI,SAAoBjF,GACc,UAA1BA,EAAiBpD,KACjBC,KAAKmX,SAAShU,GAEdnD,KAAKoX,YAAYjU,KAlB7B,oCAsBI,SAAuBiF,GACnB,IAAMjF,EAAmBnD,KAAKwD,oBAAoB4E,GAC9CiP,EAAwB,MAExBA,EAD0B,UAA1BlU,EAAiBpD,KACOC,KAAKiE,OAELjE,KAAK+D,WAEXlE,OAAOwX,EAAsBpW,QAAQkC,GAAmB,KA9BtF,sBAiCI,SAASmU,GACLtX,KAAKiE,OAAOtE,KAAK2X,KAlCzB,yBAqCI,SAAYC,GACRvX,KAAK+D,UAAUpE,KAAK4X,KAtC5B,oBAyCI,WACI,MAAO,CACHxT,UAAW/D,KAAK+D,UAAUpG,KAAI,SAAAmD,GAAC,OAAIA,EAAEY,YACrCuC,OAAQjE,KAAKiE,OAAOtG,KAAI,SAAAmD,GAAC,OAAIA,EAAEY,gBA5C3C,uBAgDI,SAAgBxB,GACZ,IAAMiC,EAAW,IAAI+U,EAGrB,OAFA/U,EAAS4B,UAAY7D,EAAI,UAAcvC,KAAI,SAAAmD,GAAC,OAAI6B,EAAiBT,SAASpB,MAC1EqB,EAAS8B,OAAS/D,EAAI,OAAWvC,KAAI,SAAAmD,GAAC,OAAI6B,EAAiBT,SAASpB,MAC7DqB,MApDf,KCCaqV,GAAb,mMAEI,4BAAA/S,EAAA,sEACqBzE,KAAK6O,KAAK,aAD/B,UACUtK,EADV,OAEmC,IAA3BjG,OAAOD,KAAKkG,GAAI9E,OAFxB,yCAE6C,MAF7C,gCAGWyX,GAAShV,SAASqC,IAH7B,gDAFJ,iHAQI,WAAakT,GAAb,SAAAhT,EAAA,sEACUzE,KAAKgV,MAAM,YAAayC,GADlC,gDARJ,4DAAsC5J,ICAzB6J,GAAb,WAWI,aAAe,oBACXA,EAAaC,IAAM,IAAIT,GAZ/B,wFAeI,sBAAAzS,EAAA,sEACUiT,EAAaE,sBADvB,2CAfJ,mGA8BI,SAAgCC,GAC5BH,EAAaI,0BAA0BnY,KAAKkY,KA/BpD,mCA6CI,SAAsBA,GAClBH,EAAaK,gBAAgBpY,KAAKkY,KA9C1C,uCAuDI,SAA0BG,GACtBN,EAAaO,mBAAqBD,IAxD1C,oCA2DI,WACIN,EAAaQ,cAAe,IA5DpC,kBA+DI,WACIR,EAAaS,WAhErB,yEAmBI,+FACIC,QAAQC,IAAI,yBADhB,SAE+BX,EAAaY,kBAAkBC,SAF9D,OAGI,GADMC,EAFV,OAGsB,CACdd,EAAaC,IAAMa,EADL,cAEKd,EAAaI,2BAFlB,IAEd,4BAAWD,EAAgD,WAF7C,+BAHtB,2CAnBJ,gHAkCI,kFACQH,EAAaQ,aADrB,uBAEQR,EAAaO,qBAFrB,iCAKIP,EAAaV,wBAAuB,GALxC,SAMUU,EAAaY,kBAAkBG,OAAOf,EAAaC,IAAIjW,UANjE,OAOIgW,EAAagB,sBACbhB,EAAaV,wBAAuB,GARxC,2CAlCJ,uFAiDI,WAA8B,IAAD,gBACNU,EAAaK,iBADP,IACzB,2BAAiD,EAC7CF,EAD6C,YADxB,mCAjDjC,KAAaH,GAEFiB,QAAU,KAFRjB,GAGFC,IAAM,KAHJD,GAIFK,gBAAkB,GAJhBL,GAKFQ,cAAe,EALbR,GAMFO,mBAAqB,aANnBP,GAOFY,kBAAoB,IAAId,GAPtBE,GAQFI,0BAA4B,GAR1BJ,GASFV,uBAAyB,SAAC5R,KCV9B,IAAMwT,GAAb,WAQI,aAAe,yBANfC,cAAgB,KAMF,KALd7B,uBAAyB,SAAC8B,KAKZ,KAJdhQ,gCAAkC,GAK9B9I,KAAK6Y,cAAgB,GAT7B,iDAYI,SAAcE,GAIV,OAHK/Y,KAAK6Y,cAAcE,KACpB/Y,KAAK6Y,cAAcE,GAAmB,IAAIA,GAEvC/Y,KAAK6Y,cAAcE,KAhBlC,8BAmBI,SAAiBna,MAnBrB,iCAqBI,SAAoBA,MArBxB,qCAuBI,SAAwBwJ,MAvB5B,mBAyBI,WACI,OAAOsP,GAAaC,MA1B5B,yBA6BI,WAAe,IAAD,OACV1S,YAAW,kBAAM,EAAKvB,WAAU,KA9BxC,2DAiCI,sBAAAe,EAAA,6DACIiT,GAAaV,uBAAyBhX,KAAKgX,uBAD/C,kBAIcU,GAAaS,QAJ3B,sDAOQ7U,MAAM,yFAPd,wDAjCJ,6DCAa0V,GAAb,WAQI,WAAY9V,GAAa,yBANzB+V,YAAc,KAMU,KALxBC,UAAY,KAKY,KAJxBC,eAAiB,IAIO,KAHxBC,gBAAkB,KAGM,KAFxBC,oBAAsB,iBAGlBrZ,KAAKiZ,YAAc/V,EACnBlD,KAAKoZ,gBAAkBpZ,KAAKsZ,iBAC5BtZ,KAAKuZ,yBACLvZ,KAAKwZ,6BAZb,0DAeI,WAA0B,IAAD,OACrBxZ,KAAKiZ,YAAY1H,cAAcmG,IAAc+B,uBAAsB,WAC/D,EAAKC,2BAjBjB,wCAqBI,WAA8B,IAAD,OACzB1Z,KAAKiZ,YAAY1H,cAAcmG,IAAciC,2BAA0B,WACnE,EAAKC,kBAvBjB,iCA2BI,WACI,IAAMC,EAAW,IAAIC,KACrB9Z,KAAKoZ,gBAAkBS,EACvB/L,aAAamH,QAAQjV,KAAKqZ,oBAAqBQ,EAASE,cA9BhE,4BAiCI,WACI,IAAMC,EAAkBlM,aAAaC,QAAQ/N,KAAKqZ,qBAClD,OAAKW,EACE,IAAIF,KAAKE,GADa,OAnCrC,6BAuCI,WACI,IAAMC,EAAaja,KAAKsZ,iBACxB,OAAQW,IAAeja,KAAKoZ,iBAAqBa,GAAcja,KAAKoZ,iBAAmBpZ,KAAKoZ,gBAAkBa,IAzCtH,mBA4CI,WAAS,IAAD,OACJja,KAAKkZ,UAAYgB,aAAY,WACrB,EAAKC,oBACL,EAAKlB,YAAY1H,cAAcmG,IAAc0C,yBAC7CC,cAAc,EAAKnB,WACnB,EAAKU,gBAEV5Z,KAAKmZ,kBAnDhB,wBAsDI,WACyB/P,OAAOC,QAAQ,uQAElBD,OAAOuE,SAAS2M,aAzD1C,KCOMpX,GAAa,IAAI0V,GACjB2B,GAA0B,IAAIvB,GAAwB9V,IACtDsX,GAAStX,GAAWqO,cAAcmG,IAClCd,GAAW1T,GAAWqO,cAAcqD,IAUpC6F,GAAK,uCAAG,sBAAAhW,EAAA,mEAEFmS,GAASX,kBAFP,gCAGIuE,GAAOE,gBAHX,OAKNH,GAAwBE,QAZ5BE,IAASC,OACL,kBAAC,GAAD,CAAK1X,WAAYA,KACjBgC,SAASC,eAAe,SAKlB,gDAQN7B,MAAM,yFARA,yDAAH,qDAYXsT,GAAS/B,QAAU,WACfzL,OAAOuE,SAAW,KAGtBiJ,GAAS9B,SAAW,WAChB1L,OAAOuE,SAAW,UAGtB8M,O","file":"static/js/main.d9cf3dde.chunk.js","sourcesContent":["var map = {\n\t\"./ckb.js\": 25,\n\t\"./da.js\": 26,\n\t\"./de.js\": 27,\n\t\"./en.js\": 18,\n\t\"./es.js\": 28,\n\t\"./fr.js\": 29,\n\t\"./he.js\": 30,\n\t\"./index.js\": 76,\n\t\"./it.js\": 31,\n\t\"./ja.js\": 32,\n\t\"./ko.js\": 33,\n\t\"./lv.js\": 34,\n\t\"./nl.js\": 35,\n\t\"./pl.js\": 36,\n\t\"./pt_br.js\": 37,\n\t\"./ro.js\": 38,\n\t\"./ru.js\": 39,\n\t\"./se.js\": 40,\n\t\"./ua.js\": 41,\n\t\"./zh_cn.js\": 42\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 75;","export const EXTERNAL_TOOLS = [\n    {\n        name: '5e Tools',\n        url: 'https://5e.tools/'\n    },\n    {\n        name: 'Bestiario (5e Tools)',\n        url: 'https://5e.tools/bestiary.html'\n    },\n    {\n        name: 'Objetos mundanos y mágicos (5e Tools)',\n        url: 'https://5e.tools/items.html'\n    },\n    {\n        name: 'Calculadora de encuentros',\n        url: 'https://kastark.co.uk/rpgs/encounter-calculator-5th/'\n    },\n    {\n        name: 'Tabla de encuentros aleatorios (5e Tools)',\n        url: 'https://5e.tools/encountergen.html'\n    },\n    {\n        name: 'Generador de nombres',\n        url: 'https://www.fantasynamegen.com/'\n    },\n    {\n        name: 'Razas',\n        url: 'https://www.dndbeyond.com/races'\n    },\n    {\n        name: 'Clases',\n        url: 'https://www.dndbeyond.com/classes'\n    }\n];","import React from 'react';\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function CreateNarrativeContextIcon() {\n    return <FontAwesomeIcon icon={faBook} color={'#72b52f'} />\n}","import React from 'react';\nimport { faFileImport } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function ImportNarrativeContextIcon() {\n    return <FontAwesomeIcon icon={faFileImport} color={'#6942f5'} />\n}","import { v4 as uuidv4 } from 'uuid';\n\nexport class IdGenerator {\n    static generateId() {\n        return uuidv4();\n    }\n}\n","export class ArrayUtils {\n    static moveElementInArray(arr, old_index, new_index) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    };\n}","import { IdGenerator } from '../utils/id-generator';\n\nexport class BaseElement {\n\n    id = null;\n    name = null;\n    type = null;\n\n    static TYPES = {\n        PARAGRAPH: 'paragraph',\n        CONTAINER: 'container',\n        SHOP: 'shop'\n    };    \n\n    constructor(name, type) {\n        this.id = IdGenerator.generateId();\n        this.name = name;\n        this.type = type;\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n            type: this.type\n        }\n    }\n\n    static fromJson(data) {\n        throw Error('This method should not be used!');\n    }\n}","import { BaseElement } from './base-element';\n\nexport class ParagraphElement extends BaseElement {\n    body = null;\n\n    constructor(name, body = null) {\n        super(name, BaseElement.TYPES.PARAGRAPH);\n        this.body = body;\n    }\n\n    toJson() {\n        const json = super.toJson();\n        json['body'] = this.body;\n        return json;\n    }\n\n    static fromJson(data) {\n        const instance = new ParagraphElement(\n            data['name'],\n            data['body']\n        );\n        return instance;\n    }\n}","import { BaseElement } from './base-element';\nimport { ElementsFactory } from '../utils/elements-factory';\nimport { ArrayUtils } from '../utils/array-utils';\n\nexport class ContainerElement extends BaseElement {\n    elements = null;\n\n    constructor(name, elements = []) {\n        super(name, BaseElement.TYPES.CONTAINER);\n        this.elements = elements;\n    }\n\n    getElement(elementId) {\n        return this.elements.find(x => x.id === elementId);\n    }\n\n    addElement(element) {\n        this.elements.push(element);\n    }\n\n    removeElement(elementId) {\n        const element = this.getElement(elementId);\n        this.elements.splice(this.elements.indexOf(element), 1);\n    }\n\n    moveElementUp(elementId) {\n        const oldIndex = this.elements.indexOf(this.elements.find(x => x.id === elementId));\n        const newIndex = oldIndex - 1;\n        if (oldIndex === 0) return;\n        ArrayUtils.moveElementInArray(this.elements, oldIndex, newIndex);\n    }\n\n    moveElementDown(elementId) {\n        const oldIndex = this.elements.indexOf(this.elements.find(x => x.id === elementId));\n        const newIndex = oldIndex + 1;\n        if (newIndex === this.elements.length) return;\n        ArrayUtils.moveElementInArray(this.elements, oldIndex, newIndex);\n    }\n\n    findInChild(elementId) {\n        for (const element of this.elements) {\n            if (element.id === elementId) return element;\n            if (element.findInChild) {\n                const found = element.findInChild(elementId);\n                if (found) return found;\n            }\n        }\n        return null;\n    }\n\n    // Returns a plain list of viewable elements obtained through iteraring al childs\n    getPlainViewableElements() {\n        let plainElements = [];\n        for (const element of this.elements) {\n            if (element.type === BaseElement.TYPES.CONTAINER) {\n                plainElements = plainElements.concat(element.getPlainViewableElements());\n            } else {\n                plainElements.push(element);\n            }\n        }\n        return plainElements;\n    }\n\n    toJson() {\n        const json = super.toJson();\n        json['elements'] = this.elements.map(x => x.toJson());\n        return json;\n    }\n\n    static fromJson(data) {\n        const instance = new ContainerElement(\n            data['name'],\n            (data['elements'] || []).map(x => ElementsFactory.mapElementFromJson(x))\n        );\n        return instance;\n    }\n}","import { IdGenerator } from '../utils/id-generator';\n\nexport class ShopItem {\n\n    id = null;\n    title = null;\n    price = null;\n    link = null;\n    amount = 0;\n\n    constructor(title, price, link, amount = 0) {\n        this.id = IdGenerator.generateId();\n        this.title = title;\n        this.price = price;\n        this.link = link;\n        this.amount = amount;\n    }\n\n    clone() {\n        return ShopItem.fromJson(this.toJson());\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            title: this.title,\n            price: this.price,\n            link: this.link,\n            amount: this.amount\n        }\n    }\n\n    static fromJson(data) {\n        const instance = new ShopItem(\n            data['title'],\n            data['price'],\n            data['link'],\n            data['amount']\n        );\n        instance.id = data['id'];\n        return instance;\n    }\n}","import { BaseElement } from './base-element';\nimport { ShopItem } from './shop-item';\n\nexport class ShopElement extends BaseElement {\n    items = null;\n\n    constructor(name, items = []) {\n        super(name, BaseElement.TYPES.SHOP);\n        this.items = items;\n    }\n\n    toJson() {\n        const json = super.toJson();\n        json['items'] = this.items.map(x => x.toJson());\n        return json;\n    }\n\n    static fromJson(data) {\n        const instance = new ShopElement(\n            data['name'],\n            data['items'].map(x => ShopItem.fromJson(x))\n        );\n        return instance;\n    }\n}","import { ParagraphElement } from '../models/paragraph-element';\nimport { ContainerElement } from '../models/container-element';\nimport { ShopElement } from '../models/shop-element';\n\nexport class ElementsFactory {\n    static _ELEMENT_TYPES_MAPPING = {\n        'paragraph': ParagraphElement,\n        'container': ContainerElement,\n        'shop': ShopElement\n    };\n\n    static mapElementFromJson(data) {\n        const instance = this._ELEMENT_TYPES_MAPPING[data['type']].fromJson(data);\n        instance.id = data['id'];\n        return instance;\n    }\n\n    static createElement(name, type) {\n        return new this._ELEMENT_TYPES_MAPPING[type](name);\n    }\n}","import { IdGenerator } from '../utils/id-generator';\nimport { ArrayUtils } from '../utils/array-utils';\nimport { ElementsFactory } from '../utils/elements-factory';\nimport { BaseElement } from './base-element';\n\nexport class NarrativeCategory {\n    id = null;\n    type = null;\n    elements = null;\n\n    constructor(name) {\n        this.id = IdGenerator.generateId();\n        this.name = name;\n        this.elements = [];\n    }\n\n    getElement(elementId) {\n        return this.elements.find(x => x.id === elementId);\n    }\n\n    findElementAnywhere(elementId) {\n        for (const element of this.elements) {\n            if (element.id === elementId) return element;\n            if (element.findInChild) {\n                const found = element.findInChild(elementId);\n                if (found) return found;\n            }\n        }\n        return null;\n    }\n\n    addElement(element) {\n        this.elements.push(element);\n    }\n\n    removeElement(elementId) {\n        const element = this.getElement(elementId);\n        this.elements.splice(this.elements.indexOf(element), 1);\n    }\n\n    moveElementUp(elementId) {\n        const oldIndex = this.elements.indexOf(this.elements.find(x => x.id === elementId));\n        const newIndex = oldIndex - 1;\n        if (oldIndex === 0) return;\n        ArrayUtils.moveElementInArray(this.elements, oldIndex, newIndex);\n    }\n\n    moveElementDown(elementId) {\n        const oldIndex = this.elements.indexOf(this.elements.find(x => x.id === elementId));\n        const newIndex = oldIndex + 1;\n        if (newIndex === this.elements.length) return;\n        ArrayUtils.moveElementInArray(this.elements, oldIndex, newIndex);\n    }   \n    \n    // Returns a plain list of viewable elements obtained through iteraring al childs\n    _getPlainViewableElements() {\n        let plainElements = [];\n        for (const element of this.elements) {\n            if (element.type === BaseElement.TYPES.CONTAINER) {\n                plainElements = plainElements.concat(element.getPlainViewableElements());\n            } else {\n                plainElements.push(element);\n            }\n        }\n        return plainElements;\n    }\n\n    getPrevElement(elementId) {\n        const viewableElements = this._getPlainViewableElements();\n        const index = viewableElements.indexOf(viewableElements.find(x => x.id === elementId));\n        if (index === 0) return null;\n        return viewableElements[index - 1];\n    }\n\n    getNextElement(elementId) {\n        const viewableElements = this._getPlainViewableElements();\n        const index = viewableElements.indexOf(viewableElements.find(x => x.id === elementId));\n        if (index === (viewableElements.length - 1)) return null;\n        return viewableElements[index + 1];\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n            elements: this.elements.map(element => element.toJson())\n        }\n    }\n\n    static fromJson(data) {\n        const instance = new NarrativeCategory(\n            data['name']\n        );\n        instance.id = data['id'];\n        instance.elements = data['elements'].map(x => ElementsFactory.mapElementFromJson(x));\n        return instance;\n    }\n}","import { IdGenerator } from '../utils/id-generator';\nimport { NarrativeCategory } from './narrative-category';\nimport { ArrayUtils } from '../utils/array-utils';\n\nexport class NarrativeContext {\n\n    static TYPES = [\n        {type: 'world', name: 'Mundo'},\n        {type: 'campaign', name: 'Campaña'}\n    ];\n\n    id = null;\n    type = null;\n    name = null;\n    categories = null;\n\n    constructor(type, name) {\n        if (!NarrativeContext.TYPES.find(x => x.type === type)) throw Error('Invalid type');\n        this.id = IdGenerator.generateId();\n        this.type = type;\n        this.name = name;\n        this.categories = [];\n    }\n\n    getNarrativeCategory(categoryId) {\n        return this.categories.find(x => x.id === categoryId);\n    }\n\n    addNarrativeCategory(category) {\n        this.categories.push(category);\n    }\n\n    removeNarrativeCategory(categoryId) {\n        const category = this.getNarrativeCategory(categoryId);\n        this.categories.splice(this.categories.indexOf(category), 1);\n    }\n\n    moveNarrativeCategoryUp(categoryId) {\n        const oldIndex = this.categories.indexOf(this.categories.find(x => x.id === categoryId));\n        const newIndex = oldIndex - 1;\n        if (oldIndex === 0) return;\n        ArrayUtils.moveElementInArray(this.categories, oldIndex, newIndex);\n    }\n\n    moveNarrativeCategoryDown(categoryId) {\n        const oldIndex = this.categories.indexOf(this.categories.find(x => x.id === categoryId));\n        const newIndex = oldIndex + 1;\n        if (newIndex === this.categories.length) return;\n        ArrayUtils.moveElementInArray(this.categories, oldIndex, newIndex);\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            type: this.type,\n            name: this.name,\n            categories: this.categories.map(x => x.toJson())\n        }\n    }\n\n    static fromJson(data) {\n        const instance = new NarrativeContext(\n            data['type'],\n            data['name']\n        );\n        instance.id = data['id'];\n        instance.categories = data['categories'].map(x => NarrativeCategory.fromJson(x));\n        return instance;\n    }\n\n}","import { NarrativeContext } from '../models/narrative-context';\nexport class NarrativeContextImporter {\n    static importFromJson(narrativeContextJson, appContext) {\n        let narrativeContext = null;\n        try {\n            narrativeContext = NarrativeContext.fromJson(JSON.parse(narrativeContextJson));\n        } catch {\n            alert('Ha ocurrido un error al importar el contexto narrativo. El formato del archivo no parece ser válido!');\n            return;\n        }\n\n        const foundExistentNarrativeContext = appContext.getDB().getNarrativeContext(narrativeContext.id);\n        if (foundExistentNarrativeContext) {\n            alert('Ha ocurrido un error al importar el contexto narrativo. Parece ser que posees otro contexto narrativo con el mismo identificador!')\n            return;\n        }\n        appContext.getDB().addNarrativeContext(narrativeContext);\n        alert('La importación fue realizada con éxito!');\n        appContext.saveDB();\n    }\n}","import '../styles/Home.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { EXTERNAL_TOOLS } from '../data/external-tools';\nimport { CreateNarrativeContextIcon } from './icons/CreateNarrativeContextIcon';\nimport { ImportNarrativeContextIcon } from './icons/ImportNarrativeContextIcon';\nimport { NarrativeContextImporter } from '../utils/narrative-context-importer';\n\nexport function Home({ appContext }) {\n    const navigate = useNavigate();\n\n    const [campaigns, setCampaigns] = useState([]);\n    const [worlds, setWorlds] = useState([]);\n\n    useEffect(() => {\n        appContext.setNarrativeContextById(null);\n        appContext.setBackButtonUrl(null);\n        appContext.setForwardButtonUrl(null);\n        const db = appContext.getDB();\n        setCampaigns(db.campaigns);\n        setWorlds(db.worlds);\n    }, [appContext]);\n\n    const createElementDB = () => {\n        navigate('/create-narrative-context');\n    }\n\n    const importNarrativeContext = async (e) => {\n        e.preventDefault();\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            const json = (e.target.result);\n            NarrativeContextImporter.importFromJson(json, appContext);\n            const db = appContext.getDB();\n            setCampaigns([...db.campaigns]);\n            setWorlds([...db.worlds]);\n            setTimeout(() => {\n                setCampaigns(db.campaigns);\n                setWorlds(db.worlds);\n            }, 0);\n            document.getElementById('narrativeContextFileSelector').value = null;\n        };\n        reader.readAsText(e.target.files[0]);\n    }\n\n    return <div>\n        <div className='homeTitleSection'>\n            <h1 className='flex1'>Contextos narrativos</h1>\n            <div className='homeTitleButtons'>\n                <button onClick={createElementDB}>\n                    <CreateNarrativeContextIcon /> Crear\n                </button>\n                <input type='file' id='narrativeContextFileSelector' hidden={true}\n                    onChange={importNarrativeContext} accept='application/json' />\n                <button onClick={() => document.getElementById('narrativeContextFileSelector').click()}>\n                    <ImportNarrativeContextIcon /> Importar\n                </button>\n            </div>\n        </div>\n\n\n        <h2><span role='img' aria-label='books'>📚</span> Campañas</h2>\n        <ul>\n            {campaigns.map(x => <li key={x.id}>\n                <Link to={`/narrative-context/${x.id}`}>{x.name}</Link>\n            </li>)}\n        </ul>\n        <h2><span role='img' aria-label='world'>🌎</span> Mundos</h2>\n        <ul>\n            {worlds.map(x => <li key={x.id}>\n                <Link to={`/narrative-context/${x.id}`}>{x.name}</Link>\n            </li>)}\n        </ul>\n        <h2><span role='img' aria-label='tools'>⚒️</span> Herramientas</h2>\n        <ul>\n            {EXTERNAL_TOOLS.map(x => <li key={x.name}>\n                <a href={x.url}>{x.name}</a>\n            </li>)}\n        </ul>\n    </div>;\n}","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { NarrativeContext } from '../models/narrative-context';\n\nexport function CreateNarrativeContext({ appContext }) {\n    const navigate = useNavigate();\n\n    const [name, setName] = useState();\n    const [type, setType] = useState(NarrativeContext.TYPES[0].type);\n\n    useEffect(() => {\n        appContext.setNarrativeContextById(null);\n    }, [appContext])\n\n\n    const create = () => {\n        const narrativeContext = new NarrativeContext(type, name);\n        appContext.getDB().addNarrativeContext(narrativeContext);\n        appContext.saveDB();\n        navigate('/');\n    }\n\n    return <div>\n        <h1>Crear contexto narrativo</h1>\n        <input type='text' placeholder='Nombre' onChange={(event) => setName(event.target.value)} />\n        <select onChange={(event) => setType(event.target.value)}>\n            {NarrativeContext.TYPES.map(x => <option key={x.type} value={x.type}>{x.name}</option>)}\n        </select>\n        <button onClick={create}>\n            Crear\n        </button>\n    </div>;\n}","import React from 'react';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function CreateIcon() {\n    return <FontAwesomeIcon icon={faPlus} color={'#2b3340'} />\n}","import React from 'react';\nimport { faScroll } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function ScrollIcon() {\n    return <FontAwesomeIcon icon={faScroll} color={'#baa28f'} />\n}","import React from 'react';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function FolderIcon() {\n    return <FontAwesomeIcon icon={faFolderOpen} color={'#FACC30'} />\n}","import React from 'react';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function ShopIcon() {\n    return <FontAwesomeIcon icon={faShoppingCart} color={'#609fbf'} />\n}","import '../styles/CreateElementButton.css';\nimport React, { useRef } from 'react';\nimport { BaseElement } from '../models/base-element';\nimport { CreateIcon } from './icons/CreateIcon';\nimport { ScrollIcon } from './icons/ScrollIcon';\nimport { FolderIcon } from './icons/FolderIcon';\nimport { ShopIcon } from './icons/ShopIcon';\n\nexport function CreateElementButton({ onClick = (type) => { } }) {\n\n    const dropdownBody = useRef();\n\n\n    const showDropdown = () => {\n        dropdownBody.current.classList.toggle('showDropdownBody');\n    }\n\n    const onDropdownElementClick = (type) => {\n        dropdownBody.current.classList.toggle('showDropdownBody');\n        onClick(type);\n    }\n\n    return <div className=\"CreateElementButton\">\n        <button onClick={showDropdown}>\n            <CreateIcon />\n            <span className='tooltip'>Crear elemento</span>\n        </button>\n        <div ref={dropdownBody} className='dropdownBody'>\n            <button onClick={() => onDropdownElementClick(BaseElement.TYPES.PARAGRAPH)}>\n                <ScrollIcon /> Texto\n            </button>\n            <button onClick={() => onDropdownElementClick(BaseElement.TYPES.CONTAINER)}>\n                <FolderIcon /> Contenedor\n            </button>\n            <button onClick={() => onDropdownElementClick(BaseElement.TYPES.SHOP)}>\n                <ShopIcon /> Tienda\n            </button>\n        </div>\n    </div>;\n}","import React from 'react';\nimport { faTag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function RenameIcon() {\n    return <FontAwesomeIcon icon={faTag} color={'#fcba03'} />\n}","import React from 'react';\nimport { faLevelUpAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function MoveUpIcon() {\n    return <FontAwesomeIcon icon={faLevelUpAlt} color={'#012452'} />\n}","import React from 'react';\nimport { faLevelDownAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function MoveDownIcon() {\n    return <FontAwesomeIcon icon={faLevelDownAlt} color={'#012452'} />\n}","import React from 'react';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DeleteIcon() {\n    return <FontAwesomeIcon icon={faTrashAlt} color={'#98a3b3'} />\n}","import React from 'react';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function CollapseIcon() {\n    return <FontAwesomeIcon icon={faAngleDown} color={'#424242'}/>\n}","import React from 'react';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function ExpandIcon() {\n    return <FontAwesomeIcon icon={faChevronRight} color={'#424242'} />\n}","import '../styles/ElementListItem.css';\nimport React, { useState } from 'react';\nimport { BaseElement } from '../models/base-element';\nimport { Link } from 'react-router-dom';\nimport { ElementsFactory } from '../utils/elements-factory';\nimport { CreateElementButton } from './CreateElementButton';\nimport { RenameIcon } from './icons/RenameIcon';\nimport { MoveUpIcon } from './icons/MoveUpIcon';\nimport { MoveDownIcon } from './icons/MoveDownIcon';\nimport { DeleteIcon } from './icons/DeleteIcon';\nimport { ScrollIcon } from './icons/ScrollIcon';\nimport { FolderIcon } from './icons/FolderIcon';\nimport { ShopIcon } from './icons/ShopIcon';\nimport { CollapseIcon } from './icons/CollapseIcon';\nimport { ExpandIcon } from './icons/ExpandIcon';\n\nexport function ElementListItem({ appContext, narrativeContextId, narrativeCategoryId, element,\n    onMoveElementUp = (element) => { }, onMoveElementDown = (element) => { },\n    onDeleteElement = (element) => { }, onRenameElement = (element) => { },\n    onChildUpdate = () => { }, tabElement = false}) {\n\n    const [highlight, setHighlight] = useState(false);\n    const [expanded, setExpanded] = useState(appContext.elementListItemExpandedStatuses[element.id] || false);\n\n    const isContainer = () => {\n        return element.type === BaseElement.TYPES.CONTAINER;\n    }\n\n    const shouldDisplayLink = () => {\n        return !isContainer();\n    }\n\n    const getIcon = () => {\n        const icons = {};\n        icons[BaseElement.TYPES.PARAGRAPH] = <ScrollIcon />;\n        icons[BaseElement.TYPES.CONTAINER] = <FolderIcon />;\n        icons[BaseElement.TYPES.SHOP] = <ShopIcon />;\n        return icons[element.type];\n    }\n\n    const createChildElement = (type) => {\n        const name = window.prompt('Ingresa el nombre del nuevo elemento');\n        if (!name) return;\n        const newElement = ElementsFactory.createElement(name, type);\n        element.addElement(newElement);\n        appContext.saveDB();\n        onChildUpdate();\n    }\n\n    const deleteChildElement = (childElement) => {\n        const shouldDelete = window.confirm(`Estas seguro de eliminar el elemento ${childElement.name}`);\n        if (!shouldDelete) return;\n        element.removeElement(childElement.id);\n        appContext.saveDB();\n        onChildUpdate();\n    }\n\n    const moveChildElementUp = (childElement) => {\n        element.moveElementUp(childElement.id);\n        appContext.saveDB();\n        onChildUpdate();\n    }\n\n    const moveChildElementDown = (childElement) => {\n        element.moveElementDown(childElement.id);\n        appContext.saveDB();\n        onChildUpdate();\n    }\n\n    const renameChildElement = (element) => {\n        const name = window.prompt('Ingresa el nuevo nombre del elemento', element.name);\n        if (!name) return;\n        element.name = name;\n        appContext.saveDB();\n        onChildUpdate();\n    }\n\n    const highlightElement = () => {\n        setHighlight(true);\n    }\n\n    const unhighlightElement = () => {\n        setHighlight(false);\n    }\n\n    const toggleExpand = () => {\n        setExpanded(!expanded);\n        // To store the expanded status while navigating through the app\n        appContext.elementListItemExpandedStatuses[element.id] = !expanded;\n    }\n\n\n    return <div className={tabElement ? 'listItemTabbed' : ''} onMouseEnter={highlightElement} onMouseLeave={unhighlightElement}>\n        <div className={'flex ' + (highlight ? 'highlightedListItem' : '')}>\n            {\n                isContainer() ? <button className=\"collapseExpandButton\" onClick={() => toggleExpand()}>\n                    {\n                        expanded ? <CollapseIcon /> : <ExpandIcon />\n                    }\n\n                </button> : <></>\n            }\n            <div className={'flex2 elementListItemName '}><span role='img' aria-label='icon'>{getIcon()} </span>\n                {\n                    shouldDisplayLink() ?\n                        <Link to={`/narrative-context/${narrativeContextId}/${narrativeCategoryId}/${element.id}`}>\n                            {element.name}\n                        </Link> :\n                        <span>\n                            {element.name}\n                        </span>\n                }\n            </div>\n\n            <div className='textRight'>\n                {\n                    isContainer() ?\n                        <CreateElementButton onClick={createChildElement} /> : <></>\n                }\n                <button onClick={() => onRenameElement(element)}>\n                    <RenameIcon />\n                    <span className='tooltip'>Renombrar</span>\n                </button>\n                <button onClick={() => onMoveElementUp(element)}>\n                    <MoveUpIcon />\n                    <span className='tooltip'>Subir</span>\n                </button>\n                <button onClick={() => onMoveElementDown(element)}>\n                    <MoveDownIcon />\n                    <span className='tooltip'>Bajar</span>\n                </button>\n                <button onClick={() => onDeleteElement(element)}>\n                    <DeleteIcon />\n                    <span className='tooltip'>Eliminar</span>\n                </button>\n            </div>\n        </div>\n        {\n            isContainer() ?\n                <div>{\n                    expanded ? element.elements.map(childElement =>\n                        <ElementListItem key={childElement.id} appContext={appContext}\n                            narrativeContextId={narrativeContextId}\n                            narrativeCategoryId={narrativeCategoryId} element={childElement}\n                            onMoveElementUp={moveChildElementUp} onMoveElementDown={moveChildElementDown}\n                            onDeleteElement={deleteChildElement} onRenameElement={renameChildElement}\n                            onChildUpdate={onChildUpdate}\n                            tabElement={true} />\n                    ) : <></>\n                }\n                </div> : <></>\n        }\n    </div>;\n}","import '../styles/NarrativeCategoryComponent.css';\nimport React, { useState } from 'react';\nimport { CreateElementButton } from './CreateElementButton';\nimport { ElementsFactory } from '../utils/elements-factory';\nimport { ElementListItem } from './ElementListItem';\nimport { RenameIcon } from './icons/RenameIcon';\nimport { MoveUpIcon } from './icons/MoveUpIcon';\nimport { MoveDownIcon } from './icons/MoveDownIcon';\nimport { DeleteIcon } from './icons/DeleteIcon';\n\nexport function NarrativeCategoryComponent({ appContext, narrativeContext, narrativeCategory, onCategoryChange, moveCategoryUp, moveCategoryDown }) {\n\n    const [elementsState, setElementsState] = useState(narrativeCategory.elements);\n\n    const rerender = () => {\n        setElementsState([...narrativeCategory.elements]);\n        setTimeout(() => setElementsState(narrativeCategory.elements), 0);\n    }\n\n    const onCreateElement = (type) => {\n        const name = window.prompt('Ingresa el nombre del nuevo elemento');\n        if (!name) return;\n        const newElement = ElementsFactory.createElement(name, type);\n        narrativeCategory.addElement(newElement);\n        appContext.saveDB();\n        rerender();\n    }\n\n    const deleteElement = (element) => {\n        const shouldDelete = window.confirm(`Estas seguro de eliminar el elemento ${element.name}`);\n        if (!shouldDelete) return;\n        narrativeCategory.removeElement(element.id);\n        appContext.saveDB();\n        rerender();\n    }\n\n    const moveElementUp = (element) => {\n        narrativeCategory.moveElementUp(element.id);\n        appContext.saveDB();\n        rerender();\n    }\n\n    const moveElementDown = (element) => {\n        narrativeCategory.moveElementDown(element.id);\n        appContext.saveDB();\n        rerender();\n    }\n\n    const renameElement = (element) => {\n        const name = window.prompt('Ingresa el nuevo nombre del elemento', element.name);\n        if (!name) return;\n        element.name = name;\n        appContext.saveDB();\n        onCategoryChange();\n    }\n\n    const deleteCategory = () => {\n        const shouldDelete = window.confirm(`Estas seguro de eliminar la categoría ${narrativeCategory.name}`);\n        if (!shouldDelete) return;\n        narrativeContext.removeNarrativeCategory(narrativeCategory.id);\n        appContext.saveDB();\n        onCategoryChange();\n    }\n\n    const renameCategory = () => {\n        const name = window.prompt('Ingresa el nuevo nombre de la categoría', narrativeCategory.name);\n        if (!name) return;\n        narrativeCategory.name = name;\n        appContext.saveDB();\n        onCategoryChange();\n    }\n\n    return <div className=\"NarrativeCategory\">\n        <div className='flex'>\n            <h3 className='flex2'>{narrativeCategory.name}</h3>\n            <div className='textRight narrativeCategoryTitleButtons'>\n                <CreateElementButton onClick={onCreateElement} />\n                <button onClick={renameCategory}>\n                    <RenameIcon />\n                    <span className='tooltip'>Renombrar</span>\n                </button>\n                <button onClick={() => moveCategoryUp(narrativeCategory)}>\n                    <MoveUpIcon />\n                    <span className='tooltip'>Subir</span>\n                </button>\n                <button onClick={() => moveCategoryDown(narrativeCategory)}>\n                    <MoveDownIcon />\n                    <span className='tooltip'>Bajar</span>\n                </button>\n                <button onClick={deleteCategory}>\n                    <DeleteIcon />\n                    <span className='tooltip'>Eliminar categoría</span>\n                </button>\n            </div>\n        </div>\n        <div className=\"narrativeCategoryElements\">\n            {\n                elementsState.map(element =>\n                    <ElementListItem key={element.id} appContext={appContext}\n                        narrativeContextId={narrativeContext.id}\n                        narrativeCategoryId={narrativeCategory.id} element={element}\n                        onMoveElementUp={moveElementUp} onMoveElementDown={moveElementDown}\n                        onDeleteElement={deleteElement} onRenameElement={renameElement}\n                        onChildUpdate={rerender} />\n                )\n            }\n        </div>\n    </div>;\n}","import React from 'react';\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function ExportNarrativeContextIcon() {\n    return <FontAwesomeIcon icon={faFileDownload} color={'#6942f5'} />\n}","import '../styles/ViewNarrativeContext.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { NarrativeCategory } from '../models/narrative-category';\nimport { NarrativeCategoryComponent } from './NarrativeCategoryComponent';\nimport { CreateIcon } from './icons/CreateIcon';\nimport { RenameIcon } from './icons/RenameIcon';\nimport { DeleteIcon } from './icons/DeleteIcon';\nimport { ExportNarrativeContextIcon } from './icons/ExportNarrativeContextIcon';\nimport { NarrativeContext } from '../models/narrative-context';\n\nexport function ViewNarrativeContext({ appContext }) {\n    const navigate = useNavigate();\n    const { narrativeContextId } = useParams();\n    const [narrativeContext, setNarrativeContext] = useState(null);\n    const [narrativeContextCategories, setNarrativeContextCategories] = useState([]);\n\n    useEffect(() => {\n        appContext.setNarrativeContextById(narrativeContextId);\n        const obtainedNarrativeContext = appContext.getDB().getNarrativeContext(narrativeContextId);\n        setNarrativeContext(obtainedNarrativeContext);\n        setNarrativeContextCategories(obtainedNarrativeContext.categories);\n        appContext.setBackButtonUrl('/');\n        appContext.setForwardButtonUrl(null);\n    }, [appContext, narrativeContextId]);\n\n    const addNarrativeCategory = () => {\n        const categoryName = window.prompt('Ingresa nombre de la categoría');\n        if (categoryName) {\n            const category = new NarrativeCategory(categoryName);\n            const narrativeContext = appContext.getDB().getNarrativeContext(narrativeContextId);\n            narrativeContext.addNarrativeCategory(category);\n            appContext.saveDB();\n            setNarrativeContextCategories([...narrativeContext.categories]);\n        }\n    }\n\n    const deleteNarrativeContext = () => {\n        const shouldDelete = window.confirm(`Estas seguro que deseas eliminar ${narrativeContext.type === 'world' ? 'el mundo' : 'la campaña'\n            } ${narrativeContext.name}`);\n        if (!shouldDelete) return;\n        appContext.getDB().removeNarrativeContext(narrativeContextId);\n        appContext.saveDB();\n        navigate('/');\n    }\n\n    const renameMarrativeContext = () => {\n        const name = window.prompt(`Ingresa el nuevo nombre de ${narrativeContext.type === 'world' ? 'el mundo' : 'la campaña'}`, narrativeContext.name);\n        if (!name) return;\n        narrativeContext.name = name;\n        appContext.saveDB();\n        setNarrativeContext({ ...narrativeContext });\n        appContext.setNarrativeContextById(null);\n        setTimeout(() => {\n            setNarrativeContext(narrativeContext)\n            appContext.setNarrativeContextById(narrativeContextId);\n        }, 0);\n    }\n\n    const onCategoryChange = () => {\n        setNarrativeContextCategories([...narrativeContext.categories]);\n    }\n\n    const moveCategoryUp = (category) => {\n        narrativeContext.moveNarrativeCategoryUp(category.id);\n        appContext.saveDB();\n        setNarrativeContextCategories([...narrativeContext.categories]);\n    }\n\n    const moveCategoryDown = (category) => {\n        narrativeContext.moveNarrativeCategoryDown(category.id);\n        appContext.saveDB();\n        setNarrativeContextCategories([...narrativeContext.categories]);\n    }\n\n    const exportNarrativeContext = () => {\n        const narrativeContextDownloadLink = document.getElementById('narrativeContextDownloadLink');\n        const content = JSON.stringify(narrativeContext.toJson(), null, 2);\n        const file = new Blob([content], { type: 'application/json' });\n        narrativeContextDownloadLink.href = URL.createObjectURL(file);\n        narrativeContextDownloadLink.download = `${NarrativeContext.TYPES.find(x => x.type === narrativeContext.type).name} - ${narrativeContext.name}.json`;\n        narrativeContextDownloadLink.click();\n    }\n\n    return <div className=\"ViewNarrativeContext\">\n        <div className='flex narrativeContextTitleBar'>\n            <h1 className='flex2'>{\n                narrativeContext?.type === 'world' ?\n                    <span role='img' aria-label='world'>🌎</span> :\n                    <span role='img' aria-label='books'>📚</span>\n            } {narrativeContext?.name}</h1>\n            <div className='textRight narrativeContextTitleButtons'>\n                <button onClick={addNarrativeCategory}>\n                    <CreateIcon />\n                    <span className='tooltip'>Crear categoría</span>\n                </button>\n                <button onClick={renameMarrativeContext}>\n                    <RenameIcon />\n                    <span className='tooltip'>Renombrar</span>\n                </button>\n                <a hidden={true} id='narrativeContextDownloadLink' href='/'> </a>\n                <button onClick={exportNarrativeContext}>\n                    <ExportNarrativeContextIcon />\n                    <span className='tooltip'>Exportar</span>\n                </button>\n                <button onClick={deleteNarrativeContext}>\n                    <DeleteIcon />\n                    <span className='tooltip'>Eliminar</span>\n                </button>\n            </div>\n        </div>\n        {\n            narrativeContextCategories.map(category =>\n                <NarrativeCategoryComponent key={category.id} appContext={appContext}\n                    narrativeCategory={category} narrativeContext={narrativeContext}\n                    onCategoryChange={onCategoryChange} moveCategoryUp={moveCategoryUp}\n                    moveCategoryDown={moveCategoryDown} />)\n        }\n    </div>;\n}","import React, { useRef } from 'react';\nimport SunEditor from 'suneditor-react';\nimport '../styles/RichTextEditor.css';\n\nexport function RichTextEditor({ onChange, initialValue }) {\n\n    const editorOptions = {\n        buttonList: [\n            ['formatBlock', 'bold', 'underline', 'italic', 'strike'],\n            ['fontColor', 'hiliteColor'],\n            ['removeFormat'],\n            ['align', 'horizontalRule', 'list'],\n            ['table', 'link', 'image', 'video', 'audio'],\n            ['fullScreen', 'codeView'],\n        ],\n        formats: [\n            {\n                tag: 'p',\n                name: 'Párrafo'\n            },\n            {\n                tag: 'h1',\n                name: 'Título'\n            },\n            {\n                tag: 'h2',\n                name: 'Subtítulo'\n            },\n            {\n                tag: 'h3',\n                name: 'Sección'\n            },\n            {\n                tag: 'h4',\n                name: 'Subsección'\n            },\n            {\n                tag: 'blockquote',\n                name: 'Bloque de descripción'\n            },\n            {\n                tag: 'pre',\n                name: 'Notas de DM'\n            },\n            //'p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'\n        ]\n    };\n\n    const editor = useRef();\n\n    let currentChangeId = 0;\n    const changeUpdateTimeout = 200;\n\n    const getSunEditorInstance = (sunEditor) => {\n        editor.current = sunEditor;\n    };\n\n    const deferredUpdate = (changeId) => {\n        setTimeout(() => {\n            if (changeId === currentChangeId) {\n                // Sometimes the ref does not have getContents function, in that case we skip this deferred update\n                if (!editor.current.getContents) return;\n                onChange(editor.current.getContents());\n            }\n        }, changeUpdateTimeout);\n    }\n\n    const handleInput = () => {\n        currentChangeId += 1;\n        deferredUpdate(currentChangeId);\n    }\n\n    const getEditorHeight = () => {\n        const height = window.innerHeight\n            || document.documentElement.clientHeight\n            || document.body.clientHeight;\n        if (height <= 640) return '48vh';\n        if (height <= 900) return '67vh';\n        return '73vh';\n    }\n\n    return <div className=\"EditorContainer\">\n        <SunEditor lang='es' defaultValue={initialValue} height={getEditorHeight()}\n            onChange={(state) => handleInput()} onInput={(event) => handleInput()}\n            getSunEditorInstance={getSunEditorInstance} setOptions={editorOptions} />\n    </div >;\n}","export const WEB_API_URL = window.location.origin.indexOf('localhost') !== -1 ? 'http://localhost:5000/api': 'https://narrativetools.herokuapp.com/api';","import Pako from 'pako';\nimport { WEB_API_URL } from '../config.js';\n\nexport class WebApiRepository {\n\n    _get_token() {\n        return localStorage.getItem('token');\n    }\n\n    async _get(endpoint) {\n        const headers = { 'Content-Type': 'application/json' };\n        const authToken = this._get_token();\n        if (authToken) {\n            headers['Authorization'] = authToken;\n        }\n        const response = await fetch(`${WEB_API_URL}${endpoint}`, {\n            method: 'GET',\n            headers: headers\n        });\n        if (response.ok) return await response.json();\n        throw await response.json();\n    }\n\n    async _post(endpoint, body) {\n        const headers = { 'Content-Type': 'application/json' };\n        const authToken = this._get_token();\n        if (authToken) {\n            headers['Authorization'] = authToken;\n        }\n        let stringBody = JSON.stringify(body);\n        let data = null;\n        if (typeof stringBody === 'string' && stringBody.length > 1024) {\n            headers['Content-Encoding'] = 'gzip';\n            data = Pako.gzip(stringBody);\n        } else {\n            // delete is slow apparently, faster to set to undefined\n            headers['Content-Encoding'] = undefined;\n            data = stringBody;\n        }\n\n        const response = await fetch(`${WEB_API_URL}${endpoint}`, {\n            method: 'POST',\n            body: data,\n            headers: headers\n        });\n        if (response.ok) return await response.json();\n        throw await response.json();\n    }\n\n    async _put(endpoint, body) {\n        const headers = { 'Content-Type': 'application/json' };\n        const authToken = this._get_token();\n        if (authToken) {\n            headers['Authorization'] = authToken;\n        }\n        const response = await fetch(`${WEB_API_URL}${endpoint}`, {\n            method: 'PUT',\n            body: JSON.stringify(body),\n            headers: headers\n        });\n        if (response.ok) return await response.json();\n        throw await response.json();\n    }\n\n    async _delete(endpoint, body) {\n        const headers = { 'Content-Type': 'application/json' };\n        const authToken = this._get_token();\n        if (authToken) {\n            headers['Authorization'] = authToken;\n        }\n        const response = await fetch(`${WEB_API_URL}${endpoint}`, {\n            method: 'DELETE',\n            body: JSON.stringify(body),\n            headers: headers\n        });\n        if (response.ok) return await response.json();\n        throw await response.json();\n    }\n\n}","import { WebApiRepository } from './web-api-repository.js';\n\nexport class DnD5eCharactersRepository extends WebApiRepository {\n\n    async getCharacter(characterId) {\n        return await this._get(`/dnd_5e/characters/${characterId}`);\n    }\n}","import '../styles/CharacterStatBlock.css';\nimport React from 'react';\n\nexport function CharacterStatBlock({ character }) {\n\n    const get_senses = () => {\n        const passive_perception = 10 + character.skills.find(x => x.name === 'Percepción').modifier;\n        return `Percepción pasiva ${passive_perception}`;\n    };\n\n    return <div className='CharacterStatBlock'>\n        <h1><a href={`https://nivel20.com/games/dnd-5/characters/${character.character_id}`}>{character.name}</a></h1>\n        <div><i>{character.class} {character.race}, {character.alignment}</i></div>\n        <div className='divider'></div>\n        <div>\n            <b>Clase de armadura </b><span>{character.armor_class}</span>\n        </div>\n        <div>\n            <b>Puntos de golpe </b><span>{character.max_hp}</span>\n        </div>\n        <div>\n            <b>Velocidad </b><span>{character.speed} pies</span>\n        </div>\n        <div>\n            <b>Bono de competencia </b><span>+{character.proficiency_bonus}</span>\n        </div>\n        <table>\n            <tbody>\n                <tr>\n                    {\n                        character.ability_scores.map(ability_score =>\n                            <th key={`${character.name}_${ability_score.name}_title`}><b>{ability_score.name.toUpperCase().substring(0, 3)}</b></th>\n                        )\n                    }\n                </tr>\n                <tr>\n                    {\n                        character.ability_scores.map(ability_score =>\n                            <td key={`${character.name}_${ability_score.name}_score`}>{ability_score.value} ({ability_score.modifier >= 0 ? '+' : ''}{ability_score.modifier})</td>\n                        )\n                    }\n                </tr>\n            </tbody>\n        </table>\n        <div>\n            <b>Tiradas de salvación </b> <span>{\n                character.saving_throws.filter(saving_throw => saving_throw.has_proficiency).map(\n                    saving_throw => `${saving_throw.name} ${saving_throw.modifier >= 0 ? '+' : ''}${saving_throw.modifier}`\n                ).join(', ')\n            }</span>\n        </div>\n        <div>\n            <b>Habilidades con competencia </b> <span>{\n                character.skills.filter(skill => skill.has_proficiency).map(\n                    skill => `${skill.name} ${skill.modifier >= 0 ? '+' : ''}${skill.modifier}`\n                ).join(', ')\n            }</span>\n        </div>\n        <div>\n            <b>Sentidos </b> <span>{get_senses()}</span>\n        </div>\n        <div>\n            <b>Idiomas </b> <span>{character.languages}</span>\n        </div>\n        {\n            character.spellcasting === null ? <></> : <>\n                <div className='divider'></div>\n                <div>\n                    <b>Lanzamiento de conjuros </b>\n                    La habilidad de lanzamiento de conjuros de {character.name} es {character.spellcasting.spellcasting_ability} (CD de salvación de conjuros {character.spellcasting.saving_throws_cd}, {character.spellcasting.attack_bonus >= 0 ? '+' : ''}{character.spellcasting.attack_bonus} para golpear con ataques de conjuro). {character.name} tiene acceso a los siguientes conjuros:\n                    {\n                        Object.keys(character.spellcasting.spell_levels).map(k => parseInt(k)).map(spell_level =>\n                            character.spellcasting.spell_levels[spell_level].max_spell_slots === 0 ? null : <div key={`${character.name}_spell_level_${spell_level}`}>\n                                <i>{spell_level === 0 ? 'Trucos (a voluntad)' : `Nivel ${spell_level} (${character.spellcasting.spell_levels[spell_level].max_spell_slots} espacios): `}</i>\n                                {character.spellcasting.spell_levels[spell_level].spells.join(', ')}\n                            </div>)\n                    }\n                </div>\n            </>\n        }\n    </div>;\n}","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { DnD5eCharactersRepository } from '../repositories/dnd5e-characters-repository';\nimport { CharacterStatBlock } from './CharacterStatBlock';\nimport ReactDOMServer from 'react-dom/server';\n\nexport function ParagraphElementComponentBodyRenderer({ appContext, body }) {\n\n    const [renderedBody, setRenderedBody] = useState();\n    let htmlBody = null;\n\n    useEffect(() => {\n        htmlBody = renderBody();\n        setRenderedBody(htmlBody);\n    }, [setRenderedBody, htmlBody]);\n\n    const getCharacter = async (characterId) => {\n        const repo = appContext.getRepository(DnD5eCharactersRepository);\n        const character = await repo.getCharacter(characterId);\n        document.getElementById(characterId).innerHTML = ReactDOMServer.renderToString(<CharacterStatBlock character={character} />);\n    }\n\n    const getCharacterTempDiv = (characterId) => {\n        return ReactDOMServer.renderToString(<div id={characterId}></div>);\n    }\n\n    const replaceCharacters = (html) => {\n        const regex = /\\[C\\]\\{([a-zA-Z0-9\\-]+)\\}/gm;\n        const matches = html.matchAll(regex);\n        let replaced_body = html;\n        for (const match of matches) {\n            replaced_body = replaced_body.replace(match[0], getCharacterTempDiv(match[1]));\n            setTimeout(() => getCharacter(match[1]), 0);\n        }\n        return replaced_body;\n    }\n\n    const renderBody = () => {\n        let html = replaceCharacters(body);\n        return html;\n    }\n\n\n    return <div dangerouslySetInnerHTML={{ __html: renderedBody }} />;\n}","import '../styles/ParagraphElementComponent.css';\nimport React, { useState } from 'react';\nimport { RichTextEditor } from './RichTextEditor';\nimport { ParagraphElementComponentBodyRenderer } from './ParagraphElementComponentBodyRenderer';\n\n\nexport function ParagraphElementComponent({ appContext, element, parentExposedFuntions }) {\n\n    const [editMode, setEditMode] = useState(false);\n    let currentEditorValue = null;\n    let hasChangedAtLeastOneTime = false;\n\n    const edit = () => {\n        setEditMode(true);\n    }\n\n    const save = () => {\n        if (!hasChangedAtLeastOneTime) {\n            discardChanges();\n            return;\n        }\n        element.body = currentEditorValue;\n        appContext.saveDBAsync();\n        setEditMode(false);\n    }\n\n    const discardChanges = () => {\n        currentEditorValue = null;\n        setEditMode(false);\n    }\n\n    const onBodyChange = (value) => {\n        hasChangedAtLeastOneTime = true;\n        currentEditorValue = value;\n    }\n\n    parentExposedFuntions.edit = edit;\n\n    return <div className=\"ParagraphElement\">\n        {\n            editMode ? <>\n                <button onClick={save}>\n                    <span role='img' aria-label='save'>💾</span> Guardar cambios\n                </button>\n                <button onClick={discardChanges}>\n                    <span role='img' aria-label='cancel'>❌</span> Descartar cambios\n                </button>\n            </> : <></>\n        }\n        {\n            editMode ?\n                <>\n                    <RichTextEditor onChange={onBodyChange} initialValue={element.body} />\n                </> :\n                <ParagraphElementComponentBodyRenderer appContext={appContext} body={element.body}/>\n\n        }\n    </div>;\n}","import React, { useState } from 'react';\nimport '../styles/ParagraphElementComponent.css';\nimport { ShopItem } from '../models/shop-item';\n\nexport function ShopTableEditor({ appContext, items, onItemsChange = (items) => { }, parentExposedFuntions }) {\n\n    const [itemsList, setItemsList] = useState(items?.map(x => x.clone()) || []);\n\n\n    const addItem = () => {\n        itemsList.push(new ShopItem());\n        onItemsChange([...itemsList]);\n        setItemsList([...itemsList]);\n    }\n\n    const removeItem = (item) => {\n        itemsList.splice(itemsList.indexOf(item), 1);\n        onItemsChange([...itemsList]);\n        setItemsList([...itemsList]);\n    }\n\n    const updateItemProp = (item, prop, value) => {\n        item[prop] = value;\n        onItemsChange([...itemsList]);\n        setItemsList([...itemsList]);\n    }\n\n    parentExposedFuntions.addItem = addItem;\n\n\n    return <div className=\"ShopTableEditor\">\n        <table className=\"shopTable\">\n            <tbody>\n                <tr>\n                    <th>Objeto</th>\n                    <th>Enlace</th>\n                    <th>Precio</th>\n                    <th>Cantidad disponible</th>\n                    <th></th>\n                </tr>\n                {\n                    itemsList?.map(x => <tr key={x.id}>\n                        <td>\n                            <input key={`${x.id}-titleInput`} onChange={(event) => updateItemProp(x, 'title', event.target.value)}\n                                value={x.title || ''} />\n                        </td>\n                        <td>\n                            <input key={`${x.id}-linkInput`} onChange={(event) => updateItemProp(x, 'link', event.target.value)}\n                                value={x.link || ''} />\n                        </td>\n                        <td>\n                            <input key={`${x.id}-priceInput`} onChange={(event) => updateItemProp(x, 'price', event.target.value)}\n                                value={x.price || ''} />\n                        </td>\n                        <td>\n                            <input type='number' key={`${x.id}-amountInput`} onChange={(event) => updateItemProp(x, 'amount', parseInt(event.target.value))}\n                                value={x.amount || 0} />\n                        </td>\n                        <td>\n                            <button onClick={() => removeItem(x)}>\n                                <span role='img' aria-label='delete'>🗑️</span>\n                            </button>\n                        </td>\n                    </tr>)\n                }\n            </tbody>\n        </table>\n    </div>;\n}","import '../styles/ShopElementComponent.css';\nimport React, { useState } from 'react';\nimport { ShopTableEditor } from './ShopTableEditor';\n\n\nexport function ShopElementComponent({ appContext, element, parentExposedFuntions }) {\n\n    const [editMode, setEditMode] = useState(false);\n    let currentEditorItems = null;\n    let hasChangedAtLeastOneTime = false;\n    const childFunctions = {}\n\n    const edit = () => {\n        setEditMode(true);\n    }\n\n    const save = () => {\n        if (!hasChangedAtLeastOneTime) {\n            discardChanges();\n            return;\n        }\n        element.items = currentEditorItems;\n        appContext.saveDBAsync();\n        setEditMode(false);\n    }\n\n    const discardChanges = () => {\n        currentEditorItems = [];\n        setEditMode(false);\n    }\n\n    const onItemsChange = (items) => {\n        hasChangedAtLeastOneTime = true;\n        currentEditorItems = items;\n    }\n\n    const addItem = () => {\n        childFunctions.addItem();\n    }\n\n    parentExposedFuntions.edit = edit;\n\n    return <div className=\"ParagraphElement\">\n        {\n            editMode ? <>\n                <button onClick={addItem}>\n                    <span role='img' aria-label='plus'>➕</span> Agregar objeto\n                </button>\n                <button onClick={save}>\n                    <span role='img' aria-label='save'>💾</span> Guardar cambios\n                </button>\n                <button onClick={discardChanges}>\n                    <span role='img' aria-label='cancel'>❌</span> Descartar cambios\n                </button>\n            </> : <></>\n        }\n        <br></br>\n        {\n            editMode ?\n                <>\n                    <ShopTableEditor items={element.items} onItemsChange={onItemsChange}\n                        parentExposedFuntions={childFunctions} />\n                </> :\n                <table className=\"shopTable\">\n                    <tbody>\n                        <tr>\n                            <th>Objeto</th>\n                            <th>Precio</th>\n                            <th>Cantidad disponible</th>\n                        </tr>\n                        {\n                            element.items.map(x => <tr key={x.id}>\n                                <td>{\n                                    x.link ?\n                                        <a href={x.link}>{x.title}</a> :\n                                        <span>{x.title}</span>\n                                }</td>\n                                <td>{x.price}</td>\n                                <td>{x.amount}</td>\n                            </tr>)\n                        }\n                    </tbody>\n                </table>\n\n        }\n    </div>;\n}","import React from 'react';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function EditIcon() {\n    return <FontAwesomeIcon icon={faEdit} color={'#574a6b'} />\n}","import React from 'react';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function CopyLinkIcon() {\n    return <FontAwesomeIcon icon={faLink} color={'#424242'} />\n}","import '../styles/ViewElement.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ParagraphElementComponent } from './ParagraphElementComponent';\nimport { ShopElementComponent } from './ShopElementComponent';\nimport { RenameIcon } from './icons/RenameIcon';\nimport { EditIcon } from './icons/EditIcon';\nimport { CopyLinkIcon } from './icons/CopyLinkIcon';\n\nexport function ViewElement({ appContext }) {\n    const navigate = useNavigate();\n    const { narrativeContextId, narrativeCategoryId, elementId } = useParams();\n    const [element, setElement] = useState(null);\n    const childFuntions = {};\n\n    useEffect(() => {\n        const setNavigationButtons = () => {\n            const narrativeCategory = appContext.getDB().getNarrativeContext(narrativeContextId)\n                .getNarrativeCategory(narrativeCategoryId);\n            const prevElement = narrativeCategory.getPrevElement(elementId, narrativeContextId);\n            const nextElement = narrativeCategory.getNextElement(elementId, narrativeContextId);\n            if (prevElement) {\n                appContext.setBackButtonUrl(`/narrative-context/${narrativeContextId}/${narrativeCategoryId}/${prevElement.id}`);\n            } else {\n                appContext.setBackButtonUrl(`/narrative-context/${narrativeContextId}`);\n            }\n            if (nextElement) {\n                appContext.setForwardButtonUrl(`/narrative-context/${narrativeContextId}/${narrativeCategoryId}/${nextElement.id}`);\n            } else {\n                appContext.setForwardButtonUrl(null);\n            }\n        }\n        appContext.setNarrativeContextById(narrativeContextId);\n\n        const obtainedElement = appContext.getDB().getNarrativeContext(narrativeContextId)\n            .getNarrativeCategory(narrativeCategoryId).findElementAnywhere(elementId);\n        setElement(obtainedElement);\n\n        setNavigationButtons();\n    }, [appContext, narrativeContextId, narrativeCategoryId, elementId]);\n\n\n    const copyRelativeLink = () => {\n        const relLink = `${window.location.origin}/narrative-context/${narrativeContextId}/${narrativeCategoryId}/${elementId}`;\n        navigator.clipboard.writeText(relLink);\n    }\n\n    const editName = () => {\n        const name = window.prompt('Ingresa el nuevo nombre del elemento', element.name);\n        if (name) {\n            const obtainedElement = appContext.getDB().getNarrativeContext(narrativeContextId)\n                .getNarrativeCategory(narrativeCategoryId).findElementAnywhere(elementId);\n            obtainedElement.name = name;\n            appContext.saveDB();\n            setElement({ ...obtainedElement });\n            setTimeout(() => {\n                setElement(obtainedElement);\n            }, 0);\n        }\n    }\n\n    const editBody = () => {\n        childFuntions.edit();\n    }\n\n    const deleteElement = () => {\n        const shouldDelete = window.confirm(`Estas seguro de eliminar el elemento ${element.name}`);\n        if (!shouldDelete) return;\n        const narrativeCategory = appContext.getDB().getNarrativeContext(narrativeContextId)\n            .getNarrativeCategory(narrativeCategoryId);\n        narrativeCategory.removeElement(element.id);\n        appContext.saveDB();\n        navigate(`/narrative-context/${narrativeContextId}`);\n    }\n\n    return <div className=\"ViewElement\">\n        {\n            element ? <>\n                <div className='flex viewElementTitleBar'>\n                    <h2 className='flex2'>{element.name}</h2>\n                    <div className='textRight viewElementTitleButtons'>\n                        <button onClick={editName}>\n                            <RenameIcon />\n                            <span className='tooltip'>Renombrar</span>\n                        </button>\n                        <button onClick={editBody}>\n                            <EditIcon />\n                            <span className='tooltip'>Editar</span>\n                        </button>\n                        <button onClick={copyRelativeLink}>\n                            <CopyLinkIcon />\n                            <span className='tooltip'>Copiar enlace</span>\n                        </button>\n                        {\n                            /*\n                            <button onClick={deleteElement}>\n                                <DeleteIcon />\n                                <span className='tooltip'>Eliminar</span>\n                            </button>\n                            */\n                        }\n                    </div>\n                </div>\n                {\n                    {\n                        'paragraph': <ParagraphElementComponent key={element.id}\n                            appContext={appContext} element={element} onDelete={deleteElement} parentExposedFuntions={childFuntions}\n                        />,\n                        'shop': <ShopElementComponent key={element.id}\n                            appContext={appContext} element={element} onDelete={deleteElement} parentExposedFuntions={childFuntions}\n                        />,\n                    }[element.type]\n                }\n\n            </> : <></>\n        }\n\n    </div>;\n}","import { WebApiRepository } from './web-api-repository.js';\n\nexport class AuthRepository extends WebApiRepository {\n    \n    onLogin = () => {};\n    onLogout = () => {};\n\n    async login(credentials) {\n        const response = await this._post(`/auth/login`, credentials);\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('tokenUsername', credentials.username);\n        this.onLogin();\n    }\n\n    isAuthenticated() {\n        return !!localStorage.getItem('token');\n    }\n\n    getAuthenticatedUsername() {\n        return localStorage.getItem('tokenUsername');\n    }\n\n    logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('tokenUsername');\n        this.onLogout();\n    }\n}","import React from 'react';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function UserIcon() {\n    return <FontAwesomeIcon icon={faUser} />\n}","import React from 'react';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function LogoutIcon() {\n    return <FontAwesomeIcon icon={faSignOutAlt} color={'#424242'} />\n}","import '../styles/SessionMenuButton.css';\nimport React, { useRef } from 'react';\nimport { AuthRepository } from '../repositories/auth-repository';\nimport { UserIcon } from './icons/UserIcon';\nimport { LogoutIcon } from './icons/LogoutIcon';\n\nexport function SessionMenuButton({ appContext }) {\n\n    const dropdownBody = useRef();\n\n\n    const showDropdown = () => {\n        dropdownBody.current.classList.toggle('showDropdownBody');\n    }\n\n    const logout = () => {\n        appContext.getRepository(AuthRepository).logout();\n    }\n\n    return <div className='SessionMenuButton'>\n        <button className='sessionIconButton' onClick={showDropdown}>\n            <UserIcon />\n        </button>\n        <div ref={dropdownBody} className='dropdownBody'>\n            <button onClick={logout}>\n                <LogoutIcon /> Cerrar sesión\n            </button>\n        </div>\n    </div>;\n}","import '../styles/Navbar.css';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SessionMenuButton } from './SessionMenuButton';\nimport { AuthRepository } from '../repositories/auth-repository';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight, faDiceD20 } from '@fortawesome/free-solid-svg-icons';\n\nexport function Navbar({ appContext }) {\n\n    const [backButtonUrl, setBackButtonUrl] = useState('/');\n    const [forwardButtonUrl, setForwardButtonUrl] = useState('/');\n    const [narrativeContext, setNarrativeContext] = useState(null);\n\n    const setNarrativeContextById = (narrativeContextId) => {\n        let obtainedNarrativeContext = null;\n        if (narrativeContextId) {\n            obtainedNarrativeContext = appContext.getDB().getNarrativeContext(narrativeContextId);\n        }\n        setNarrativeContext(obtainedNarrativeContext);\n    }\n\n    appContext.setBackButtonUrl = setBackButtonUrl;\n    appContext.setForwardButtonUrl = setForwardButtonUrl;\n    appContext.setNarrativeContextById = setNarrativeContextById;\n\n    return <div className='Navbar'>\n        <div className='navbarContent'>\n            <div className='flex1'>\n                <Link to={`/`} id='homeTitleLink'>\n                    <FontAwesomeIcon icon={faDiceD20} /> Inicio\n                </Link>\n            </div>\n            <div className='textCenter'>\n                {\n                    narrativeContext ?\n                        <Link to={`/narrative-context/${narrativeContext.id}`} id='narrativeContextTitleLink'>{narrativeContext.name}</Link> :\n                        <></>\n                }\n            </div>\n            <div className='flex2 textRight' id='nabvarNavigationIcons'>\n                <span className={`iconButton ${backButtonUrl ? 'iconButtonActive' : 'iconButtonInactive'\n                    }`}>\n                    {\n\n                        backButtonUrl ? <Link to={backButtonUrl}>\n                            <FontAwesomeIcon icon={faAngleLeft} />\n                        </Link> :\n                            <FontAwesomeIcon icon={faAngleLeft} className='inactiveLink' />\n                    }\n                </span>\n                <span> </span>\n                <span className={`iconButton ${forwardButtonUrl ? 'iconButtonActive' : 'iconButtonInactive'\n                    }`}>\n                    {\n                        forwardButtonUrl ? <Link to={forwardButtonUrl}>\n                            <FontAwesomeIcon icon={faAngleRight} />\n                        </Link> :\n                            <FontAwesomeIcon icon={faAngleRight} className='inactiveLink' />\n                    }\n                </span>\n                {\n                    appContext.getRepository(AuthRepository).isAuthenticated() ? <SessionMenuButton appContext={appContext}/> : <></>\n                }                \n            </div>\n        </div>\n    </div>;\n}","import '../styles/LoginView.css';\nimport React, { useEffect, useState } from 'react';\nimport { AuthRepository } from '../repositories/auth-repository';\n\nexport function LoginView({ appContext }) {\n    const [username, setUsername] = useState(null);\n    const [password, setPassword] = useState(null);\n\n    useEffect(() => {\n        appContext.setBackButtonUrl(null);\n        appContext.setForwardButtonUrl(null);\n    }, [appContext]);\n\n    const login = async () => {\n        try {\n            await appContext.getRepository(AuthRepository).login({\n                username, password\n            });\n        } catch {\n            alert('Usuario o contreseña inválidos!');\n        }        \n    }\n\n    return <form className=\"LoginView\" onSubmit={e => e.preventDefault()}>\n        <input type='text' name='username' onChange={(event) => setUsername(event.target.value)} placeholder='Usuario' />\n        <input type='password' name='password' onChange={(event) => setPassword(event.target.value)} placeholder='Contraseña' />\n        <button type='submit' onClick={login}>Iniciar sesión</button>\n    </form>;\n\n}","import React, { useEffect } from 'react';\nimport { AuthRepository } from '../repositories/auth-repository';\n\nexport function LogoutView({ appContext }) {\n\n    useEffect(() => {\n        appContext.setBackButtonUrl(null);\n        appContext.setForwardButtonUrl(null);\n        appContext.getRepository(AuthRepository).logout();\n    }, [appContext]);\n\n    return <></>;\n\n}","import '../styles/UpdatingDBIndicator.css';\nimport React from 'react';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function UpdatingDBIndicator() {\n    return <div className='UpdatingDBIndicator'>\n        <FontAwesomeIcon className='updatingDBIcon' icon={faCloudUploadAlt} />\n    </div>\n}","import './styles/App.css';\nimport './styles.css';\nimport React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Navigate,\n    //Link\n} from 'react-router-dom';\nimport { Home } from './components/Home';\nimport { CreateNarrativeContext } from './components/CreateNarrativeContext';\nimport { ViewNarrativeContext } from './components/ViewNarrativeContext';\nimport { ViewElement } from './components/ViewElement';\nimport { Navbar } from './components/Navbar';\nimport { LoginView } from './components/LoginView';\nimport { AuthRepository } from './repositories/auth-repository';\nimport { LogoutView } from './components/LogoutView';\nimport { UpdatingDBIndicator } from 'components/UpdatingDBIndicator';\n\nexport function App({ appContext }) {\n\n    const authRepo = appContext.getRepository(AuthRepository);\n\n    const [userLogged] = useState(authRepo.isAuthenticated());\n    const [updatingDB, setUpdatingDB] = useState(false);\n\n    appContext.setUpdatingDBIndicator = setUpdatingDB;\n\n    return <div className='App'>\n        {\n            updatingDB ? <UpdatingDBIndicator/> : <></>\n        }\n        <Router>\n            <Navbar appContext={appContext} />\n            <div className='RouterContainer'>\n                <Routes>\n\n                    {userLogged ?\n                        <>\n                            <Route path='/create-narrative-context' element={<CreateNarrativeContext appContext={appContext} />} />\n                            <Route path='/narrative-context/:narrativeContextId/:narrativeCategoryId/:elementId' element={<ViewElement appContext={appContext} />} />\n                            <Route path='/narrative-context/:narrativeContextId' element={<ViewNarrativeContext appContext={appContext} />} />\n                            <Route path='/logout' element={<LogoutView appContext={appContext} />} />\n                            <Route path='/' element={<Home appContext={appContext} />} />\n                            <Route path=\"*\" element={<Navigate to ='/' />}/>\n                        </> : <>\n                            <Route path='/login' element={<LoginView appContext={appContext} />} />\n                            <Route path=\"*\" element={<Navigate to ='/login' />}/>\n                            <Route path=\"/\" element={<Navigate to ='/login' />}/>\n                        </>\n                    }\n                    \n                </Routes>\n            </div>\n        </Router>\n    </div>;\n}","import { NarrativeContext } from './narrative-context';\n\nexport class Database {\n\n    campaigns = null; // Array of NarrativeContext\n    worlds = null; // Array of NarrativeContext\n\n    constructor() {\n        this.campaigns = [];\n        this.worlds = []; \n    }\n\n    getNarrativeContext(narrativeContextId) {\n        return this.campaigns.concat(this.worlds).find(x => x.id === narrativeContextId);\n    }\n\n    addNarrativeContext(narrativeContext) {\n        if (narrativeContext.type === 'world') {\n            this.addWorld(narrativeContext);\n        } else {\n            this.addCampaign(narrativeContext);\n        }\n    }\n\n    removeNarrativeContext(narrativeContextId) {\n        const narrativeContext = this.getNarrativeContext(narrativeContextId);\n        let narrativeContextsList = null;\n        if (narrativeContext.type === 'world') {\n            narrativeContextsList = this.worlds;\n        } else {\n            narrativeContextsList = this.campaigns;\n        }\n        narrativeContextsList.splice(narrativeContextsList.indexOf(narrativeContext), 1);\n    }\n\n    addWorld(world) {\n        this.worlds.push(world);\n    }\n\n    addCampaign(campaign) {\n        this.campaigns.push(campaign);\n    }\n\n    toJson() {\n        return {\n            campaigns: this.campaigns.map(x => x.toJson()),\n            worlds: this.worlds.map(x => x.toJson())\n        }\n    }\n\n    static fromJson(data) {\n        const instance = new Database();\n        instance.campaigns = data['campaigns'].map(x => NarrativeContext.fromJson(x));\n        instance.worlds = data['worlds'].map(x => NarrativeContext.fromJson(x));\n        return instance;\n    }\n\n}","import { WebApiRepository } from './web-api-repository';\nimport { Database } from '../models/database';\n\nexport class DBSyncRepository extends WebApiRepository {\n\n    async pullDB() {\n        const db = await this._get('/database');\n        if (Object.keys(db).length === 0) return null;\n        return Database.fromJson(db);\n    }\n\n    async pushDB(dbJson) {\n        await this._post('/database', dbJson);\n    }\n}","import { Database } from '../models/database';\nimport { DBSyncRepository } from './db-sync-repository';\n\nexport class DBRepository {\n\n    static _DB_KEY = 'db'\n    static _db = null;\n    static _afterSaveHooks = [];\n    static _preventSave = false;\n    static _onDirtyDBCallback = () => { };\n    static _dbSyncRepository = new DBSyncRepository();\n    static _onCloudDBDownloadedHooks = [];\n    static setUpdatingDBIndicator = (value) => { };\n\n    constructor() {\n        DBRepository._db = new Database();\n    }\n\n    async tryGetCloudDB() {\n        await DBRepository._tryDownloadCloudDB();\n    }\n\n    static async _tryDownloadCloudDB() {\n        console.log('Downloading remote DB');\n        const downloadedDB = await DBRepository._dbSyncRepository.pullDB();\n        if (downloadedDB) {\n            DBRepository._db = downloadedDB;\n            for (const hook of DBRepository._onCloudDBDownloadedHooks) {\n                hook();\n            }\n        }\n    }\n\n    registerOnCloudDBDownloadedHook(hook) {\n        DBRepository._onCloudDBDownloadedHooks.push(hook);\n    }\n\n    static async _save() {\n        if (DBRepository._preventSave) {\n            DBRepository._onDirtyDBCallback();\n            return;\n        }\n        DBRepository.setUpdatingDBIndicator(true);\n        await DBRepository._dbSyncRepository.pushDB(DBRepository._db.toJson());\n        DBRepository._callAfterSaveHooks();\n        DBRepository.setUpdatingDBIndicator(false);\n    }\n\n    registerAfterSaveHook(hook) {\n        DBRepository._afterSaveHooks.push(hook);\n    }\n\n    static _callAfterSaveHooks() {\n        for (const hook of DBRepository._afterSaveHooks) {\n            hook();\n        }\n    }\n\n    registerOnDirtyDBCallback(callback) {\n        DBRepository._onDirtyDBCallback = callback;\n    }\n\n    enableSavingPrevention() {\n        DBRepository._preventSave = true;\n    }\n\n    save() {\n        DBRepository._save();\n    }\n\n}","import { DBRepository } from './repositories/db-repository';\n\nexport class AppContext {\n\n    _repositories = null;\n    setUpdatingDBIndicator = (status) => { };\n    elementListItemExpandedStatuses = {\n        \n    }\n\n    constructor() {\n        this._repositories = {}\n    }\n\n    getRepository(repositoryClass) {\n        if (!this._repositories[repositoryClass]) {\n            this._repositories[repositoryClass] = new repositoryClass();\n        }\n        return this._repositories[repositoryClass];\n    }\n\n    setBackButtonUrl(url) { }\n\n    setForwardButtonUrl(url) { }\n\n    setNarrativeContextById(narrativeContextId) { }\n\n    getDB() {\n        return DBRepository._db;\n    }\n\n    saveDBAsync() {\n        setTimeout(() => this.saveDB(), 0);\n    }\n\n    async saveDB() {\n        DBRepository.setUpdatingDBIndicator = this.setUpdatingDBIndicator;\n        // console.log('Enviando datos al servidor de la aplicación...');\n        try {\n            await DBRepository._save();\n            // console.log('Los datos se enviaron al servidor correctamente!');\n        } catch {\n            alert('Ha ocurrido un error al tratar de enviar los cambios al servidor de la aplicación!');\n        }\n    }\n}","import { DBRepository } from '../repositories/db-repository';\n\nexport class DataCorruptionPreventer {\n\n    _appContext = null;\n    _interval = null;\n    _INTERVAL_TIME = 2000;\n    _lastDBSaveTime = null;\n    _LAST_SAVE_DATE_KEY = 'last_save_date';\n\n    constructor(appContext) {\n        this._appContext = appContext;\n        this._lastDBSaveTime = this._getStoredDate();\n        this._registerAfterSaveHook();\n        this._registerOnDirtyDBCallback();\n    }\n\n    _registerAfterSaveHook() {\n        this._appContext.getRepository(DBRepository).registerAfterSaveHook(() => {\n            this._updateLastSaveInfo();\n        });\n    }\n\n    _registerOnDirtyDBCallback() {\n        this._appContext.getRepository(DBRepository).registerOnDirtyDBCallback(() => {\n            this._onDirtyDB();\n        });\n    }\n\n    _updateLastSaveInfo() {\n        const saveDate = new Date();\n        this._lastDBSaveTime = saveDate;\n        localStorage.setItem(this._LAST_SAVE_DATE_KEY, saveDate.toString());\n    }\n\n    _getStoredDate() {\n        const lastSaveDateStr = localStorage.getItem(this._LAST_SAVE_DATE_KEY);\n        if (!lastSaveDateStr) return null;\n        return new Date(lastSaveDateStr);\n    }\n\n    _isWorkingDirty() {\n        const storedDate = this._getStoredDate();\n        return (storedDate && !this._lastDBSaveTime) || (storedDate && this._lastDBSaveTime && this._lastDBSaveTime < storedDate);\n    }\n\n    start() {\n        this._interval = setInterval(() => {\n            if (this._isWorkingDirty()) {\n                this._appContext.getRepository(DBRepository).enableSavingPrevention();\n                clearInterval(this._interval);\n                this._onDirtyDB();\n            }\n        }, this._INTERVAL_TIME)\n    }\n\n    _onDirtyDB() {\n        const shouldReload = window.confirm('Usted esta trabajando con una version desactualizada de la base de datos local y no podra guardar cambios en esta.' +\n            ' Por favor recargue la aplicación para poder volver a utilizarla con normalidad o haga click en aceptar / ok para hacerlo automáticamente.');\n        if (shouldReload) window.location.reload();\n    }\n}","import './index.css';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { App } from './App';\nimport { AppContext } from './app-context';\nimport { DataCorruptionPreventer } from './services/data-corruption-preventer';\nimport { DBRepository } from './repositories/db-repository';\nimport { AuthRepository } from './repositories/auth-repository';\n\nconst appContext = new AppContext();\nconst dataCorruptionPreventer = new DataCorruptionPreventer(appContext);\nconst dbRepo = appContext.getRepository(DBRepository);\nconst authRepo = appContext.getRepository(AuthRepository);\n\nconst renderApp = () => {\n    ReactDom.render(\n        <App appContext={appContext} />,\n        document.getElementById('root')\n    );\n}\n\n// Just download the remote DB if use is logged in\nconst start = async () => {\n    try {\n        if (authRepo.isAuthenticated()) {\n            await dbRepo.tryGetCloudDB();\n        }\n        dataCorruptionPreventer.start();\n        renderApp();\n    } catch {\n        alert('Ha ocurrido un error al sincronizar con el servidor, por favor refresca la página!');\n    }\n}\n\nauthRepo.onLogin = () => {\n    window.location = '/';\n}\n\nauthRepo.onLogout = () => {\n    window.location = '/login';\n}\n\nstart();"],"sourceRoot":""}